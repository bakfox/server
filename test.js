import chalk from 'chalk';
import readlineSync from 'readline-sync';
import { brotliCompress, brotliDecompress } from 'zlib';
import {
  displayCamp,
  displayDefolt,
  displayFristDice,
  displayStatus,
  displayAdventure_Battle,
  displayAdventure_Shop,
  displayAdventure_Failed,
  displayAdventure_Succes,
  displayAdventure_Trap,
  displayAdventure,
  displayinventory,
} from './display.js';
import { log } from 'console';

let maxDay = 100; //최종 날자
let day = 1; // 날자
let dayStack = 1; //아침 점심 오후

let maxStage = 3; // 스테이지 맥스
let stageStack = 1; //스테이지 큰범위 관련 맵 -
let stageCount = 1; //작은 범위;
let specialEventStatus = 0; // 스페이셜 이벤트
let battleEnd = true; // 배틀 상태

let playerGold = 10000; // 플레이어 관련

const playerAdventureSprit_SpecialEvent = {
  //0: 상점 1: 덫 2: 안전하게 탈출 3 : 머리부터 떨어짐 4: 도와주로 옴  5: 상자 6: 상자 보상 7: 상자 미믹
  0: `
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣄⣤⢤⠤⠦⠶⠲⠶⠲⠒⠓⠓⠛⠛⠚⠓⡓⠓⢶⡄⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠶⠛⠙⠉⠉⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠁⠀  ⠀⣻⡀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⠀⠀⠀  ⢸ ⣇⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣟⠀⠀⠀⠀⠀  ⠨⣿⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡾⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡄⠀⠀⠀  ⠀⣸⡟⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡟⣸⢿⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣿⣿⣄⠀⢀⣴⡿⠁⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⡶⢿⡸⠿⣤⣦⣴⣴⣦⣶⣶⣶⣶⣶⣶⣶⣶⣶⣷⣿⣿⣿⡿⡿⠿⣿⣿⣷⣿⣿⡄⠀⠀⠀⠀⣀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠃⣿⣇⣽⡷⠓⢿⣭⡟⠉⠉⠉⠉⣈⣩⠽⠻⢭⣍⠉⠉⠈⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⡀⣠⣴⣞⠉⣗⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡾⠋⣿⣿⡿⣦⣿⠏⣀⢀⡴⠞⠋⠉⠁⠀⠀⠀⠈⠛⠶⣄⣀⠀⠀⠀⠀⢈⡇⠉⠛⣿⣿⣟⠷⣍⣡⣾⣿⣄
  ⠀⠀⠀⠀⠀⠀⠀⣠⠶⠾⢷⣄⣿⠋⠀⣿⠃⠀⣟⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠳⢦⡄⠀⠀⣯⠀⠀⢸⣿⣿⣀⡾⣹⠏⠉⠉
  ⠀⠀⠀⠀⠀⠀⠀⠙⢶⢰⡗⢻⡏⠀⣼⠃⠀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⠀⠀⢿⠀⠀⢸⡆⠀⠐⣿⣿⡟⢁⣯⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⣹⡎⣧⣿⠀⢰⡇⠀⢰⡇⠀⢀⣠⣄⠀⠀⠀⠀⣀⣀⠀⢠⡀⠀⠹⣆⠀⠈⢷⡀⠀⣷⠀⠀⢹⣿⡷⢿⣿⡆⠀⠀
  ⠀⠀⠀⠀⠀⢀⡴⢛⡭⠀⠤⣍⢻⡞⠀⠀⣺⡀⢠⣯⡀⠘⣇⢀⣠⡟⠉⠘⢷⠸⡇⠀⠀⠸⡆⠀⠘⣇⠀⢸⡆⠀⢼⡟⢁⣽⣿⡃⠀⠀
  ⠀⠀⠀⠀⢠⡟⣸⣏⣠⣴⣤⣽⣾⠁⠀⠀⠈⣽⢻⣿⣿⠶⡷⠛⢽⣿⣿⡤⢾⡿⣇⠀⠀⠀⢻⡄⢀⡓⠀⠀⣗⠀⡿⠁⣾⣿⡿⢶⣗⠀
  ⠀⠀⠀⠀⢸⡇⣿⣿⣿⣿⣿⣿⢇⡴⠛⠙⠳⣿⡞⠻⠷⠖⣩⣤⢸⣿⣿⣅⣬⠧⡗⠀⠀⠀⠈⣧⣸⠷⠳⣦⡗⢰⡏⢸⣿⡟⢠⣿⡗⠀
`,
  1: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢶⣦⣄⠀⠀⠀⠀⠈⠻⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣴⣶⣶⣶⣶⣄⣠⣀⡀⣀⣀⣀⣀⣀⢀⢀⣈⣿⣷⣦⠀⠀⠀⠀⠘⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣿⠏⠁⠀⠀⠀⠸⠟⠉⠋⠀⠙⠙⠛⠛⠛⠛⠟⠛⠙⠛⠻⣷⠀⠀⠀⠀⠘⠿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠻⢷⣶⣶⢿⠿⠿⡾⣶⣶⣶⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣿⣿⡗⠀⠀⠀⠀⠀⠉⠙⠻⢷⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⣿⣻⣯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⣿⢺⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡵⣿⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣶⢿⣯⣿⠝⢻⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠿⣿⣷⣿⠁⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢾⣷⣶⣤⣀⠀⠀⠈⣿⡇⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠹⣿⡍⠛⢿⣶⣼⡿⠀⠀⢐⣿⠅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠈⠻⣿⣄⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣀⡀⠀⠀⣺⡏⠀⠀⠀⠀⠘⣿⡄⣸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠺⣿⡿⠿⣿⣿⡃⠀⠀⠀⠀⠀⢻⣧⢺⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⣿⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢼⡷⠀⣿⣿⠀⠀⠀⠀⠀⠀⢸⣿⡿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢠⣿⠃⠀⣿⣟⠀⠀⠀⠀⠀⣠⣾⠟⠁⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣾⡏⠀⠀⣿⣗⠀⠀⠀⠀⣴⡿⠃⠀⠀⢽⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢰⣿⠁⠀⠀⠹⣿⡀⠀⢀⣾⠟⠀⠀⠀⠀⢸⣿⠀⠀⠀⣶⡿⢷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣻⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇
⢺⣷⡀⠀⠀⠀⠹⣿⣤⣾⠏⠀⠀⠀⠀⠀⠀⣿⡇⢰⡄⠀⠀⢀⠈⠙⣅⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡇
⠀⠙⢿⣶⣤⣤⣀⢨⣿⠋⠀⠀⠀⠀⠀⢀⣤⣿⣷⡀⠀⣿⣇⣽⣷⣘⡛⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇
⠀⠀⠀⠀⠉⠉⠛⢿⣯⣄⡀⠀⠀⢀⣴⡿⠋⢙⣿⣿⠿⢿⡟⣿⡟⠛⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠻⣷⣶⡿⠋⠀⣠⣶⣿⡯⠀⠈⠀⠉⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⢐⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇
⠀⠀⠀⠀⠀⠀⣠⣤⣤⡄⠀⣾⣟⣿⣦⣼⡿⠉⠙⢿⣿⢷⢷⣶⣶⡿⠟⠋⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇
⠀⠀⠀⠀⠀⢰⣿⠉⠉⠀⠀⢙⣻⡿⢷⣿⠂⠀⠀⠀⠉⢾⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇
⠀⠀⠀⠀⠀⢸⣿⠀⠀⣿⣦⣾⣿⠁⣼⡧⠀⠀⠀⠀⠀⢘⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡿⠀⠀⠀⠀⣤⠄⠀⠀⠀⠀⠀⠀⣿⡇
⠀⠀⠀⠀⠀⠀⢫⡀⢀⣿⣿⣅⠉⢀⣿⠇⠀⠀⠀⠀⠀⣸⡿⠹⣷⣄⠀⠀⠀⠀⠀⠀⠀⢠⣿⠃⠀⠀⠀⠀⣈⠀⠀⠀⠀⠀⠀⠀⣿⡇
⠀⠀⠀⠀⠀⠀⠹⣿⣬⣿⡎⠋⠀⣾⡟⠀⠀⠀⠀⢀⣴⣿⠁⠀⠈⢿⣦⠀⠀⠀⠀⠀⠀⣿⠏⠀⠀⠀⠀⢨⣿⠃⠀⠀⠀⠀⠀⠀⣿⡇
⠀⠀⠀⠀⠀⠀⠀⠈⠙⢹⣷⠀⢰⣿⡑⠿⣶⣾⡿⠃⠉⠘⠿⣷⣶⣼⡿⠀⠀⠀⢀⣶⣾⡿⠀⠀⠀⢀⣴⡿⠋⠀⠀⠀⠀⠀⠀⠀⢿⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣦⣿⣿⡇⠀⢠⣾⠇⠀⠀⠀⠀⠀⠈⠈⠀⠀⠀⢀⣺⡟⠙⠃⠀⠀⣠⣾⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠃
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠛⠁⣿⡇⣰⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠋⠁⠀⠀⢀⣼⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⡀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠽⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠋⠀⠀⠀⠀⣠⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠟⠀⠀⠀⠀⠀⣰⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⢼⣟⠀⠀⠀⢀⢀⡰⣿⣃⣀⣀⣠⣠⣠⣤⣤⣤⣴⡤⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢀⣀⣀⣾⡿⣧⢤⣦⣤⣴⣴⣶⡿⠇⠀⠀⠀⠚⠛⠛⠛⠛⠛⠛⠙⠙⠉⠉⠉⠉⠈⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠾⠿⠿⠿⠿⠟⠟⠛⠛⠋⠀⠁⠀⠉⠉⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
  2: `
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⡀⡀⠀⠀⠀⠀⠀⠰⢤⡀⠀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠏⠉⡉⡻⠚⠂⠚⠲⠲⠖⠟⠻⠧⠀⠀⠹⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣏⠙⠙⠛⠲⢦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡧⠀⠀⠀⠀⠀⠈⠛⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⣻⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⡏⠀⠀⠀⠀⠀⢐⡇⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⡇⠀⠀⠀⠀⠀⠠⡗⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠨⡇⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠂⠀⠀⠀⠀⠀⢘⡇⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⠉⠀⠀⠙⢷⡄⠀⠀⠀⠀⠀⠀⠀⢠⡗⠀⠀⠆⠀⠀⠀⢐⡇⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⠟⢳⡄⠀⠀⠘⣿⣤⠀⠀⠀⠀⣠⣠⡾⠀⠀⢀⡷⠀⠀⠀⠨⡇⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠇⠀⠘⣳⣤⣄⡀⣻⡯⡆⠀⣀⣼⣿⠟⠃⢀⣰⠟⠀⠀⠀⠀⠈⠗⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣁⣄⡼⠋⠁⠉⠋⠹⡦⠷⠞⣿⠟⠉⠀⢠⡞⠁⠀⠀⠀⠀⠀⠢⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠖⠛⠉⣁⡥⢡⡀⠀⠀⢰⠟⠁⠙⣾⠃⠀⠀⢰⠏⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣼⣇⣀⣀⣀⣾⣉⣀⣈⣻⣰⢷⢨⣷⡤⡴⠇⠀⠐⠚⠛⠓⠛⠛⠛⠙⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠉⠉⠉⠉⠁⠉⠉⠉⠉⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
  3: `
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⡀⡀⠀⠀⠀⠀⠀⠰⢤⡀⠀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠏⠉⡉⡻⠚⠂⠚⠲⠲⠖⠟⠻⠧⠀⠀⠹⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣏⠙⠙⠛⠲⢦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡧⠀⠀⠀⠀⠀⠈⠛⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⣻⠴⢤⣄⠀⠀⠀⠀⠀⠙⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣶⡿⠛⢻⠄⢸⠇⠀⠀⠀⠀⠀⠈⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡶⠛⠉⣉⣬⠷⣠⣿⡤⣿⣤⢿⡇⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣇⠠⢿⠉⡴⠏⠁⠀⠀⠀⠀⣼⠁⠀⠀⠀⠀⠀⠀⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⡀⠀⢻⡀⠘⣿⠃⠀⠀⠀⢀⣠⠾⠁⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⠉⠈⠙⣦⣸⡇⣼⡷⠾⠻⠻⢻⡏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⢀⡾⠈⠀⠀⡀⢀⠨⣷⡟⠁⠀⠀⠀⠀⣸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⣧⠀⣯⠈⣯⢿⢸⣗⣇⠀⠀⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⡏⠀⠀⠀⠀⠀⢐⡇⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠸⣆⣯⠀⣿⣶⡾⠛⠋⣷⠀⣀⣠⣰⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⡇⠀⠀⠀⠀⠀⠠⡗⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⢸⡟⠚⠋⠁⠀⠀⠀⢸⡏⣩⢷⣽⣿⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠨⡇⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⢸⡃⠐⠶⠶⢤⣤⣤⠼⠛⠁⠀⠙⢱⡄⠻⣄⠀⠀⠀⠀⠀⠀⠀⠀⣼⠂⠀⠀⠀⠀⠀⢘⡇⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⢸⡃⠀⠀⠀⠀⢿⣷⠀⠀⠀⠀⠀⢐⣧⠀⠙⣦⠀⠀⠀⠀⠀⠀⢠⡏⠀⠀⠆⠀⠀⠀⢐⡇⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⣽⠀⠀⠀⠀⠀⣾⣷⣄⣀⣀⡀⣀⢞⣙⣷⠴⠞⠀⠀⠀⠀⠀⢀⡿⠀⠀⢀⡷⠀⠀⠀⠨⡇⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⢰⣇⣀⣄⣤⠴⢞⡿⠛⠉⠉⠉⠁⠁⠈⠙⠳⣆⣄⣤⣀⠀⠀⣸⠿⠁⠀⣴⠛⠀⠀⠀⠀⠈⠗⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢹⣿⡏⢰⠟⠀⠀⠀⠀⠀⠀⢀⣠⠴⠆⠉⠀⠀⠉⣳⠞⠉⠀⢠⡾⠁⠀⠀⠀⠀⠀⠢⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣿⣧⠏⠀⠀⠀⠀⠀⠀⢼⠋⠁⠀⠀⠀⠀⠀⣼⠃⠀⠀⣰⠏⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⢻⡆⠀⠀⠀⢀⣀⣀⣟⣀⣰⢷⢠⣤⡤⠶⠇⠀⠐⠲⠛⠚⠓⠛⠛⠙⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠉⠉⠈⠉⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
  4: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣠⡴⠎⠁⠁⠀⠀⠸⠶⠚⠋⡗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣍⠁⢹⡇⠀⠀⠀⠀⠀⠀⠀⣤⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢾⠇⠀⠀⠀⠀⠀⠀⢀⡅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⣖⢧⣀⢀⣀⠀⠀⠀⣰⣿⢶⡶⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠋⢹⡏⠀⠉⠋⠉⠛⠛⠙⠉⢸⡏⠉⠉⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣆⣀⠘⣧⣤⣀⣀⣀⣀⣠⡤⢶⣿⣠⣠⣴⡾⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⡉⠉⠉⡽⠁⠈⠉⠉⠉⠀⠀⢀⢿⡼⠛⣏⢉⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣧⠀⣸⠃⠀⠀⠀⢀⣠⠴⠞⠋⠉⠀⠀⡇⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣧⡏⠀⠀⢀⡴⠏⠁⠀⠀⠀⠀⠀⢰⡇⣽⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⠀⢰⡏⠀⠀⠀⠀⠀⠀⠀⢠⡞⢱⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣷⣄⣼⣧⣤⣤⢤⢤⠤⠴⠼⠿⠶⠿⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
  5: `

⠀⠀⠀⠀⣴⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣴⣶⣶⣶⣶⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠈⠉⠀⠀⠀⢠⣶⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⡿⠟⠋⠉⠁⠀⠀⠉⠙⢿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⡿⠋⠀⠀⠀⠀⠺⢿⣷⣦⠀⠈⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢰⣶⣦⣦⣤⣤⡀⠀⣾⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠏⠀⠀⢀⣤⣴⣤⣄⡀⠘⣿⣇⠀⢺⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠉⠉⠙⠛⠃⢨⣿⠇⠀⠀⠀⠀⠀⠀⢀⣾⡗⠀⠀⠀⣼⣿⠛⠉⠙⢻⣷⠀⠿⠗⠀⢸⣿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢼⣿⠀⠀⠀⠀⠀⠀⠀⣾⣿⠀⠀⠀⠀⣿⡧⠀⢠⣶⣾⣶⠄⣠⡄⠀⣸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠹⠫⠀⠀⠀⠀⠀⠀⠀⣿⡇⢠⣶⡀⠀⢹⣿⡄⠈⢁⣻⣿⠀⠉⠁⢀⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣿⡇⢸⣿⡂⠀⠀⠙⢿⢿⡿⠿⠿⠀⠀⠀⣼⡿⠁⠀⠀⠀⠀⠀⠀⣼⣷⠀⠀⠀⠀⣠⣤⡄
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣷⠈⢿⣷⣀⡀⢀⢀⠀⢠⣄⠀⠀⠀⣸⣿⠃⠀⠀⠀⠀⠀⠀⣰⣿⠃⠀⠀⠀⠀⠈⠉⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠿⣷⣦⡙⠿⠿⠿⠿⠃⠈⠁⢀⣠⣾⡿⠃⠀⠀⠀⠀⠀⠀⣾⡿⠋⠀⠀⠀⣶⣦⣦⡄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⢿⣷⣶⣦⣦⣴⣴⣾⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠁⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⡀⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣾⡿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠿⠻⠻⠻⠻⠿⠿⣿⣆⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣿⠟⠉⠀⠀⢸⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡀⠀⠀⠀⠀⠀⠀⣸⣿⠂⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡿⠋⠀⠀⠀⠀⠀⢸⣿⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠀⠀⠀⠀⠀⠀⠀⣾⡟⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣿⡟⠀⠀⠀⠀⠀⠀⠀⢸⣿⠅⠀⢀⣠⣤⣶⣶⣶⣦⡀⠀⠀⠀⠀⣾⡿⠀⠀⢀⠀⠀⠀⣸⣿⠅⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠠⣿⡇⠀⠀⠀⠀⠀⠀⠀⠰⣿⣇⣾⡿⠛⠙⠉⠁⠉⠁⠀⠀⠐⣷⣶⣿⣿⣶⡿⡿⢿⣷⣄⣿⡏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣿⣗⠀⣀⣤⣤⣤⣤⣤⣾⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⠿⠛⠉⠁⠀⠀⣨⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⡄⣿⡟⠙⠋⠛⠙⢽⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣄⠀⠀⠀⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣶⣿⠟⣹⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠫⣜⡿⣿⣦⣤⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⡟⠀⣼⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣌⠉⠛⢿⣯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣆⣼⡿⠃⠀⠀⠀⠀⣠⣾⡶⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡀⠀⠉⠋⣤⣤⠙⢋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⣿⣿⡿⠁⠀⠀⠀⠠⣿⠿⠋⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⣷⠄⠀⠀⠈⢛⣅⢿⣷⣄⠀⠀⢀⣄⡀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣯⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣶⠄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡖⠈⠀⠀⠀⢀⣿⡟⠀⠙⠻⣿⣶⣿⡿⢿⣷⣴⣴⣶⣶⢔⣾⡿⠁⢿⣿⠿⣿⣶⣄⠀⠀⠀⠀⠀⠈⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣾⣿⣿⠁⠀⠀⠀⠀⠈⠀⠀⠀⠉⠉⠉⠉⠀⠈⠁⠀⠀⠘⣿⡇⠀⠙⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⠿⠟⠁⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣾⡿⠃⠀⠀⠘⢿⣷⣦⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣃⣀⡀⡀⢛⢿⣷⣦⣤⣤⣠⣀⣀⡀⡀⢀⢀⣀⣄⣤⣶⡾⠿⣿⡋⣀⣀⣀⣴⣷⣀⣜⣿⣧⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠠⣿⡿⠿⠻⠻⠿⠿⠿⢿⣿⡟⠙⠛⠛⠻⠻⠿⠿⠿⠿⠻⠛⠋⠁⠀⠈⣿⣿⠻⠛⣿⣿⣿⡟⠛⠋⢻⣿⠄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⡄⠀⠀⠀⠀⠀⣼⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣴⣾⠿⠋⣻⣿⠀⠀⣽⣿⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⠀⠀⠀⠀⣰⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣴⣾⡿⠟⠋⠁⠀⠀⣺⣿⠀⢀⣿⡇⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣇⠀⠀⢠⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⡿⠿⠛⠉⠁⠀⠀⠀⠀⠀⠀⢾⣟⠀⢰⣿⠅⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⡄⢀⣾⡿⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡏⠀⣺⣿⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣴⣿⠅⠀⠀⠀⠀⠀⢀⣴⣾⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡇⢐⣿⡇⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⡏⠀⠀⠀⠀⠀⣴⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⠃⣾⡿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣟⠀⠀⠀⠀⠀⣾⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡿⠃⢰⣿⡃⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣦⠀⠀⠀⠀⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣿⣟⡁⢠⣿⠟⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣷⣀⣀⣀⣼⣿⣄⣄⣄⣄⣤⣤⣤⣤⣤⣤⣴⣤⣦⣮⣿⣿⣿⣿⣷⣾⣿⣧⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⠿⠿⠟⠟⠟⠻⠛⠛⠛⠛⠋⠋⠙⠉⠉⠉⠉⠉⠉⠉⠉⠈⠈⠀⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
  6: `

⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣠⣤⣴⣴⣶⣶⣶⣶⣶⣷⣶⣶⣶⣶⣶⣤⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣴⣾⠿⠟⠛⠙⠉⠉⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠋⠛⠛⠀⢴⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣤⣶⡿⠟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣷⣦⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⣠⣶⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣿⡄⠀⠀⠀⠀
⠀⠀⣀⣴⡿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣀⣀⣠⣠⣄⣤⣠⣠⣠⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⡄⠀⠀⠀
⠀⢰⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣴⣶⡿⠿⠿⠟⠟⠛⠛⠙⠙⠙⠙⠙⠛⠛⠛⠿⠿⣷⣶⣦⣤⣄⠀⠀⠀⠀⢹⣿⡀⠀⠀
⠀⣽⡯⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⡿⠟⠋⠉⠀⠀⠀⢀⣀⣀⠀⠀⠀⠀⠀⣠⣴⣦⣄⠀⠀⠀⠀⣀⣉⠙⠻⢿⣶⣤⡀⠀⢻⣷⡀⠀
⠀⣿⡇⠀⠀⠀⠀⢀⣤⣾⠿⠛⠉⠀⣀⣀⣀⠀⠀⠀⣠⣾⣿⣿⣿⣶⣤⣴⣿⣿⣿⣿⣿⣷⣄⣤⣾⣿⣿⡅⠀⠀⠈⠙⠿⣷⣦⣿⣧⠀
⢨⣿⠅⠀⠀⣠⣴⡿⠏⠁⠀⠀⢀⣴⣿⣿⣿⣷⣶⣾⣿⣿⡿⠿⠟⠟⠟⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⢀⣠⣄⠀⠀⠙⢿⣿⠇
⢸⣿⠀⣀⣾⠿⠉⣀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⢿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣷⠀⢠⣾⣿⠁
⢸⣿⣰⣿⠋⠀⣼⣿⣿⣦⣤⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⡀⣀⢀⢀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⠃⠀
⢸⣿⣿⣧⣄⠠⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠀⠀⢀⣠⣴⣾⡾⠿⠟⠟⠟⠿⠿⠿⣷⣶⣤⡀⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀
⠀⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⢀⣴⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠟⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀
⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⢠⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠸⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀
⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⡯⠀⠠⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠿⠀⠀⠀⠀⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⣿⣷⠀⢸⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣄⠀⠀⢀⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⢻⣿⣿⣿⣿⣿⣿⡄⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡀⠀⣰⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣮⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣷⣤⡿⠋⢻⣿⣇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⠏⠉⢻⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣏⠀⠀⠘⣿⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣼⣿⡿⠃⠀⠀⠀⣼⡿⠀⠀⢀⣠⣤⣶⣾⣾⣾⣶⣶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣤⣤⣤⣽⣿⣇⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣿⡟⠁⣠⣤⣴⣴⣿⠇⢠⣶⣿⣿⢿⣿⣿⠿⠻⠻⠿⣿⣿⣿⣿⣾⣶⣶⣶⣶⣶⣶⣿⣿⡍⠉⠀⢻⣿⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠐⢿⣷⠀⠉⠉⠉⣼⡿⣱⣿⡿⠋⠀⠘⣿⡇⠀⠀⠀⠀⠀⠉⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⣸⣿⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠘⣿⡆⠀⠀⠀⠹⣿⣿⣿⡇⠀⠀⠀⢻⣿⡄⠀⠀⠀⠀⠀⠀⢀⣿⡟⠉⢱⣿⠟⠛⠁⠀⠀⠀⠀⣾⡗⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢹⣷⡀⠀⠀⠀⠀⠈⣻⡧⠀⠀⠀⢰⣿⣿⣦⠀⠀⠀⠀⢠⣾⡟⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⢰⣿⠃⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣧⠀⠀⠀⠀⠀⢺⣿⠀⠀⠀⣽⡯⠘⢿⣷⡄⣀⣴⣿⣏⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⣿⡏⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡆⠀⠀⠀⠀⢸⣿⠀⠀⠀⣿⡇⠀⠀⠻⣿⣿⠟⠹⣿⡀⠀⠀⣽⡯⠀⠀⠀⠀⠀⣸⣿⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡀⠀⠀⠀⢘⣿⡂⠀⢰⣿⠃⠀⠀⠀⠉⡀⡀⡈⣿⣇⠀⠀⣿⣇⣀⣀⣀⣄⣰⣿⣇⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⣷⢠⣴⣴⣶⣿⡇⠀⢸⣿⡷⡿⠿⠿⠿⠿⠿⠻⢻⣿⡀⠀⣿⣟⠛⠛⠛⠛⠛⠙⠙⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠈⠈⢿⣇⠀⣸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣷⣤⣼⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⠿⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
};
const playerAdventureSprit_defoltEvent = {
  //0 :실패 나머지 아이템 데이터 참조
  0: `
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠀⠀⠀⠀⠀⠀⣠⣤⣤⣀⣀⣀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⠋⣠⠀⠀⠀⠀⠀⢸⣷⢶⡶⠲⠾⢭⣝⠳⢦⡀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠮⣝⣳⠶⠶⠾⣿⣾⠃⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣷⡀⢠⡟⣧⠀⠀⠀⠉⠉⠉⠋⠁⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⠶⢋⣽⣧⢤⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡿⢳⣼⡃⠈⠳⣆⠀⠀⠀⠀⠀⠀⠀⠀⣲⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠟⠋⠁⠀⠀⠀⠀⠀⠀⢼⣟⣁⠀⠀⠀⠀⠀⠀⠀⢨⣷⡄⠈⢧⡀⠀⠘⣧⣀⣤⠴⠞⢻⡆⠀⠟⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⠶⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠳⢦⡀⠀⠀⠀⠀⠀⠳⣄⣀⢈⣹⠆⣐⣯⣅⠁⠀⣸⡏⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⢀⡴⠞⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠳⢦⡀⠀⠀⠈⠹⣆⠀⠀⠀⠀⢀⣬⡽⢿⡭⠾⢯⣉⣁⣶⠞⠋⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⣼⠋⠀⠀⠀⢀⣠⣶⠆⠀⢺⡄⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠘⣇⠀⠀⠀⠈⠳⠚⠉⠀⠀⠀⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠸⣆⠈⠛⠛⠋⢹⡏⠀⠀⢸⠟⠶⣄⣄⣀⣀⣀⡀⢽⡀⠀⠀⠀⠀⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠘⠷⣄⣀⡀⣿⠀⠀⢀⡟⠀⠀⠀⠈⠉⠉⠉⠙⠋⠛⢦⡀⠀⠀⢸⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⢸⡏⠁⣿⠀⠀⢸⣷⢦⣄⣤⠴⠀⠀⢀⡀⠀⢀⡀⣽⢦⢀⡾⢉⣳⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠈⣧⢀⡯⠀⠀⣿⣾⠀⠀⠀⠀⣤⣆⠈⠉⠛⠉⣿⣧⡾⠟⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠹⣖⡇⠀⢸⡃⠀⠀⠀⠀⠚⠁⠘⠀⠀⠀⠀⣻⡿⣅⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⢀⡽⣗⢠⡿⠶⢤⣤⣀⣀⣀⣀⣄⣠⡤⠶⠚⠉⣴⠋⠀⠀⠀⠀⠀⣤⣾⣅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⢼⠃⢿⡾⠀⠀⠀⠀⠈⠉⠉⠁⠁⠀⠀⠀⠀⢈⣳⠀⠀⠀⠀⠀⠈⣿⠿⠿⠖⠗⢲⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣎⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡴⠶⠋⠉⠳⠶⣄⠀⠀⣸⠇⠀⠀⠀⠀⠈⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣷⣶⣶⣶⣶⣶⣴⣶⠚⠋⣽⡆⣠⣦⠀⡀⠀⠈⠛⣦⣯⠆⠀⠀⠀⠀⠀⠸⡆⠀⣀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⠿⠛⠛⠋⠁⠁⠀⠀⠈⢙⣟⣿⠟⠻⣦⣼⡟⢀⣤⠞⠋⠀⠀⠀⠀⠀⠀⠀⣀⣿⠞⣻⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣺⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣉⣸⡧⠞⠋⠈⠉⠉⠳⣆⠀⠀⠀⠀⠀⠀⠀⢰⡏⢀⣠⠏⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣺⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣫⠇⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠀⠀⠀⠀⠈⠛⢛⡇⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠛⢷⣄⢀⣴⣾⣶⣦⠀⠀⠀⠙⢷⣀⠀⠀⠀⠀⠀⠨⡇⠀⠀⠀⠀⠀⠀⠀⠀
`,
  1: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣶⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⠈⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⣿⠁⠀⠀⠙⢿⣷⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡿⠀⠀⠀⠀⠈⠹⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⠀⠀⠀⠀⠀⠀⠈⠻⣿⣧⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣧⡀⠀⠀⠀⠀⠀⠀⢿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⡄⠀⠀⠀⠀⠀⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⡀⠀⠀⠀⢰⣿⣟⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣺⣿⡂⠀⠀⠀⢿⡿⠿⣿⣿⣶⣦⣄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⠀⣠⣄⠀⠀⠀⠀⠀⠈⠙⠛⢿⣿⣆⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⡿⢁⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣿⣿⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⠏⣠⣿⡿⠋⠀⠀⠈⠀⠀⠀⠀⠀⠉⠙⠛⠋⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣼⣿⠟⢁⣼⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⠟⠁⣰⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣾⡿⠟⠁⣠⣾⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣾⡿⠋⠀⣠⣾⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣀⣤⣶⣿⠿⠋⠀⣠⣼⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢀⣠⣾⣿⡿⠟⠋⠁⢀⣴⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣰⣿⡿⠋⠁⠀⠀⣠⣶⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢨⣿⡟⠀⠀⣠⣴⣿⡿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠸⣿⣧⣴⣾⣿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠻⠿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
  2: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⠶⠾⠶⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠏⢁⣿⠃⠀⠀⠀⠙⢷⣆⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣴⠿⢿⣟⠻⠿⣦⣄⠀⠀⠀⠀⠻⣧⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡾⠿⠻⠿⢿⣧⡶⠿⣗⠀⢀⣿⠛⢿⣷⠷⠷⠆⠹⣷⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣺⡃⠀⠀⣠⡿⠁⠀⠈⢹⣧⢘⣟⠀⠀⠻⡧⠀⠀⠀⠹⣧⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠄⠀⢠⡿⠁⠀⠀⠀⠀⠹⣿⡃⠀⢀⣶⠰⡆⠀⠀⠀⢻⣧⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣼⣿⠂⢠⣿⢧⣦⣴⣤⣄⣀⠀⠉⠿⣦⣼⡏⠀⠀⠀⠺⢶⢾⢿⣆⠀
⠀⠀⠀⠀⠀⠀⣠⣴⠶⠟⠇⠀⠀⠡⣿⢡⣾⠃⠈⠈⠀⠈⠉⠛⠷⣧⣦⣈⠙⠻⢾⣴⣄⣄⠀⠀⠈⣿⡀
⠀⠀⠀⠀⣰⡾⠋⠂⠀⠀⠀⠀⠰⣮⢿⣿⢷⢾⠾⠀⠀⠀⠀⠀⠀⠀⠈⠹⢷⡄⠀⠀⠉⠙⠻⠳⠷⠻⠃
⠀⠀⢀⣼⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣦⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣼⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣧⠀⠀⠀⠀⠀⠀⠀
⠀⣼⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡆⠀⠀⠀⠀⠀⠀
⢠⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣷⠀⠀⠀⠀⠀⠀
⣸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣻⠅⠀⠀⠀⠀⠀
⣺⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⡃⠀⠀⠀⠀⠀
⢺⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠅⠀⠀⠀⠀⠀
⢸⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣟⠁⠀⠀⠀⠀⠀
⠘⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠃⠀⠀⠀⠀⠀⠀
⠀⠹⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⠋⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠻⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠛⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠻⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠛⠿⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣴⡾⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠿⠷⠶⠶⠶⠾⠿⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
  3: `
⠀⠀⠀⠀⠀⠀⢀⣠⣤⣴⣶⣶⣶⣶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢀⣠⣶⡿⠟⠛⠉⠁⠀⠀⠀⠈⢻⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢀⣾⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠈⣿⡆⠀⠀⠀⠀⠀⠀⢀⣠⣤⣦⣶⣾⢿⢷⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢹⣷⣀⣀⠀⣤⣤⠀⠈⠛⠉⠁⠀⣴⡄⠀⣹⡷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣠⣿⠿⠛⠀⠉⠁⠀⠀⢀⣠⣤⣶⡦⠀⢀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢠⣿⠃⠙⠿⠀⣤⣤⣶⣿⣿⣿⣿⡅⠀⢴⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠈⢿⣧⡀⠀⠀⢉⣉⠹⣿⣿⣿⣿⣷⣆⠈⢿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠈⠙⠻⠿⠿⠿⢿⣆⢿⣿⣿⣿⣿⣿⡄⠘⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⡈⣿⣿⣿⣿⣿⣷⠀⢻⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣻⣧⠸⣿⣿⣿⣿⣿⣧⠘⢿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⡆⢻⣿⣿⣿⣿⣿⡇⠘⢿⣶⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⡌⢿⣿⣿⣿⣿⣿⠀⠀⢸⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⡘⣿⣿⣿⣿⣿⣷⠀⠈⢿⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣻⣧⢻⣿⣿⣿⣿⣿⣷⣄⠀⠉⠻⣷⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡟⢀⣾⣿⣿⣿⣿⣿⣿⣿⣷⡄⠀⠈⠻⣷⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠏⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣄⠀⠈⠹⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣿⠏⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⡀⠀⠛⢿⣦⣀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⣾⡟⠀⣾⣿⣿⡿⠟⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠿⣷⣤⡀⠙⠻⣷⣦⣀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⣾⠟⢀⣾⡟⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣶⣤⡀⠙⠻⣷⣤⠀
⠀⠀⠀⠀⢠⣿⠏⠀⣾⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣶⣶⣶⢿⠿⠿⢂⣀⣬⣿⡇
⠀⠀⠀⢠⣿⠏⠀⣼⡿⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣴⣶⢿⠟⠟⠛⠉⢁⣀⣤⣴⣶⠿⠟⠛⠋⠁⠀
⠀⠀⢠⣿⠏⠀⣼⡿⠁⠀⣀⣀⣤⣤⣶⣶⡿⠿⠛⠋⠉⣁⣠⣠⣤⣶⣾⠿⠟⠟⠋⠉⠀⠀⠀⠀⠀⠀⠀
⠀⢠⣾⠏⠀⣾⣿⡷⡿⠿⠛⠛⠋⠉⡈⣀⣤⣤⣶⣾⠿⠟⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢠⣿⠏⠀⠀⢀⢁⣀⣠⣤⣶⣶⡿⠿⠟⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠈⠻⠿⠿⠿⠿⠟⠛⠋⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
  4: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠚⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠋⢀⡄⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠛⠁⠀⠀⣸⠇⠀⠘⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠶⠋⠀⠀⠀⠀⢀⡟⠀⠀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⠁⠀⠀⠀⠀⠀⠀⢸⠃⠀⠀⠀⠀⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⢠⡟⠀⠀⠀⠀⢀⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠃⠀⠀⠀⠀⠀⠀⠛⠀⠀⠀⢀⡴⠏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡏⠀⠀⠀⠀⠀⣰⠆⠀⠀⠀⢠⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠁⠀⠀⠀⢀⡾⠃⠀⠀⠀⣴⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡏⠀⠀⠀⣠⠟⠀⠀⠀⢠⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠁⠀⠀⣰⠏⠀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀⣀⡼⠃⠀⠀⢀⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠺⢿⣿⣿⣷⡀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠿⣷⡼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀


`,
  5: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠛⠁⠀⠀⠉⠉⠁⡉⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠋⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠋⠁⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡴⠞⠁⠀⠀⠀⠀⠀⠀⢀⣰⣾⣿⣿⣿⣿⣿⣿⣿⣿⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠞⠉⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠶⠋⠁⠀⠀⠀⠀⠀⠀⠀⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠘⠲⠶⠦⣤⣄⡀⠀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠁⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠷⢦⣄⡀⠀⠀⠀⠀⠀⢽⣿⣿⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠓⠷⢤⣀⡀⠸⣿⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠚⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
  6: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠖⢶⠏⠀⠙⠷⣄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣺⠁⠀⠀⠘⠶⣤⣀⡽⠂⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⢋⡼⠳⣤⠄⠀⠀⠉⣳⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠶⠋⣡⠶⠋⠁⢠⡞⠁⣠⠶⠺⠋⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠴⠞⠋⠁⣠⠄⠘⢶⣄⠀⡾⠁⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⠶⠋⠁⢀⣤⠶⠛⠁⠀⠀⠀⠘⣿⡏⠀⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡴⠞⠋⠀⣀⡴⠞⠋⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⠞⠉⠀⣠⣴⣾⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣟⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⠞⠀⢀⣠⣶⣿⣿⣿⢿⣿⣷⣄⡀⠀⠀⠀⠀⠀⠀⠀⢀⡯⠀⠸⠅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⠀⣠⣶⣿⣿⣿⡟⠁⠉⢿⣿⣿⣿⣿⣷⡆⢀⣲⣶⣶⣒⣶⡇⠀⢐⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠃⠀⣴⣿⣿⣿⣿⣿⣿⣦⣶⣾⣿⣿⣯⣽⣿⣿⣿⡟⠃⠈⢹⣿⡇⠀⢐⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡃⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠻⠿⢿⣿⣿⣄⣄⣼⣿⠇⠀⢐⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣍⡀⠀⠠⣿⣿⣿⣿⣿⣿⣿⠁⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣗⠀⢽⣿⣿⣿⣿⣿⣿⡇⠀⠙⠋⣻⣿⣿⣦⣾⣶⣿⣿⣿⣿⣿⣿⡏⠀⠀⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⠀⢸⣿⣿⣿⣿⣿⣥⡀⠀⠀⢘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⢠⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡄⠘⢿⣿⣿⣿⣿⣿⣷⣤⣿⣾⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⠇⠀⠀⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣧⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠉⢉⣿⣿⠋⠀⠀⣰⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠈⠹⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡄⣀⣸⡿⠃⠀⠀⣴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣆⡀⠈⠙⠻⢿⣿⡿⠿⠛⣿⣿⣿⣿⣿⡿⠟⠁⠀⣠⠾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⢀⣀⠀⠈⠀⠀⠀⠘⠙⠉⠁⠁⠀⢀⣤⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠓⠶⠶⠦⠄⠀⠀⠶⠶⠚⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
  7: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡤⠶⠛⠉⠳⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠶⠋⠁⠀⠀⠀⠀⠀⠀⠉⣳⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡼⠃⠲⠦⣤⣀⡀⡀⢀⣠⣴⣾⣿⣿⣿⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⠶⣺⠏⠀⠀⠀⠀⠀⠉⠉⢋⡿⠟⠋⠉⠉⠉⠻⢿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠾⡧⢴⢤⣄⠀⠀⠀⠀⢀⡞⠁⠀⠀⠀⠀⠀⠀⠈⢹⡗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⠶⠴⢤⠴⣼⣷⠀⠀⠀⢸⣷⣾⣶⣶⣄⠀⠀⠀⠀⠀⢻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⢦⡀⠀⠀⠀⠙⠃⠀⠀⠈⠉⠈⢈⣿⣿⣷⣦⣀⣀⣤⠀⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⢀⣤⠾⢿⣿⣿⣿⣿⣿⣿⣧⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡷⢴⣄⣄⣤⠴⠞⢋⣤⣾⣿⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡀⠀⠀⢀⣠⣾⣿⣿⣿⣿⣿⣿⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠛⠉⠁⠉⠉⠙⠙⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
};
const playerAdventureSprit_AM = {
  // 오전 이미지
  1: `
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⡴⠖⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠳⠶⢤⣤⣠⣠⣤⠤⠶⠖⠞⠋⣡⠟⢳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⢀⡾⠁⠀⠀⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀⣴⠶⣆⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠃⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡀⠀⠀⠀⠀
      ⠀⣠⠟⠀⠀⠀⠀⠀⠹⣆⠀⠀⠀⠀⠀⢀⡾⠁⠀⠘⢧⠀⠀⠀⠀⠀⢀⡴⠏⠀⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⢀⡼⠃⠹⢦⡀⠀⠀
      ⡴⠋⠀⠀⠀⠀⠀⠀⠀⠹⡆⢠⣦⣀⠀⠛⠀⠀⠀⠀⢈⣣⠀⠀⠀⢠⠞⠁⠀⣠⡴⠛⢷⠀⠀⠘⣇⠀⠀⠀⠀⢀⡾⠁⠀⠀⠈⠳⣄⠀
      ⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⡉⠳⢦⣀⠀⠀⢠⡞⠿⠖⠲⠶⣆⣠⣴⠛⠁⣰⠆⢹⠀⠀⠀⢸⡆⠀⠀⣠⠟⠀⠀⠀⠀⠀⠀⠙⢦
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡀⠻⣄⠀⠉⠻⠷⠋⠀⠀⠀⠀⠀⠈⠁⠉⠛⢶⡋⢀⡟⠀⠀⠀⠀⢷⣀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠈
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠈⠳⣦⢤⡀⠀⠀⠀⠈⠻⣄⠀⠀⠀⠀⠀⢹⡟⠁⠀⠀⠀⠀⠀⢻⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣳⠆⢰⡇⠸⣇⠀⠀⣀⠰⠆⠸⣇⣖⣠⣀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⡀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⣾⠀⡿⠀⠀⠈⢷⣾⣽⣷⣦⣴⠏⣹⢳⣿⣆⠀⢹⠀⠀⠀⠀⢺⠶⣄⣀⣹⠄⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⢸⣧⠴⠳⣆⠀⢰⡇⠀⠀⠀⠀⢻⢀⡏⠀⠀⠀⣿⡃⣾⣿⣷⠀⠀⣿⢸⣿⡟⣷⣼⠁⠀⠀⠀⠀⠀⠈⢉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠈⠁⠀⠀⠈⠻⠺⠂⠀⠀⠀⠀⠸⣇⡇⠀⠀⢀⡿⢥⣽⣿⠟⠀⢀⠀⠛⠛⠛⢿⡁⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⠀⠀⢸⠇⠀⠀⠀⠀⠰⠛⠃⠀⢀⣠⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢸⡆⠀⣾⢥⣄⣀⣀⣠⣠⡴⠶⠚⠋⠁⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⡛⠶⣄⡀⠀⢾⣻⣰⠇⠀⠀⠈⠉⠈⠀⠀⠀⠀⠀⠀⣼⢧⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡂⠀⠀⠙⠷⣌⣿⣿⣧⣀⣀⡀⡀⠀⠀⣠⡖⠚⣞⠛⠁⠀⠙⢿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠹⡆⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠅⠀⠀⠀⠀⠈⢻⡿⣿⡛⠋⠉⢁⣠⠞⠻⢾⣿⣥⣤⡄⠀⠀⢨⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡄⠀⠀⠀⠀
      ⠀⢲⡄⠀⠀⠀⠀⣠⠄⣼⠁⠀⠀⠀⠀⣰⠟⠀⠈⠙⠓⠶⠛⠁⠀⢰⣾⡿⠿⣿⣴⡤⣠⡾⢧⡀⠀⠀⠀⠀⠀⠰⠶⢤⣤⠷⠀⠀⠀⠀
      ⠀⠀⠹⢦⣀⣀⡴⠏⠀⣿⠀⠀⠀⠀⠀⢯⡀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣽⣧⡴⠞⠛⠿⢯⡀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠉⠉⠀⠀⠀⣿⠀⠀⠀⠀⠀⠈⡽⠶⢦⣄⣀⣠⣆⣀⣠⡬⠿⠇⠀⠀⠀⠀⠀⠹⣆⠀⠈⠳⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⡀⠀⠀⠀⢀⡼⠃⠀⠀⢼⠉⠁⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠈⠙⢶⣄⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⢀⡾⠁⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⢀⡼⠃⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣤⡟⠀⠀⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣤⠶⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀
      `,
  2: `
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠃⠰⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⣀⣀⣄⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣴⠏⠀⠀⢀⡈⠳⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠚⠁⠁⢱⡆⠀⠁⣿⠳⢦⣀⡀⠀⠀⠀
   ⠀⠀⠀⣀⣠⠴⣶⠒⠛⠉⠁⠈⠈⢳⡄⠀⠀⠹⣦⣤⣽⠟⠶⢦⣤⡤⠴⠴⢤⢤⡤⡤⠆⠈⠹⡴⠖⠛⡿⠀⠀⣴⢿⣠⣠⣬⣽⣶⡶⠶
   ⢀⠴⠚⠉⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⢷⡀⠀⠀⢸⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠦⠶⠋⠛⣧⠀⠀⠀⠀⠀⠀
   ⠉⠒⠾⠲⢷⠺⠃⠀⠀⠀⠀⢰⣤⣀⠀⠻⢦⣀⣽⠀⠀⣄⠀⠀⠀⠀⠀⠀⠀⣠⡴⠛⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⣶⣄⠀⠀
   ⠀⠀⠀⠀⢸⡂⠀⠀⠀⠀⠀⣽⠀⡉⠳⢦⣀⠈⠁⢠⡞⠿⠖⠲⠶⢆⣠⣴⠛⠁⣰⠆⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢀⡗⠸⣆⠀
   ⠀⠀⠀⠀⢹⠆⠀⠀⠀⠀⠀⢻⡀⠻⣄⠀⠉⠻⠷⠋⠀⠀⠀⠀⠀⠈⠉⠉⠛⢶⡋⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⡼⠁⠀⢹⡄
   ⠀⠀⠀⠀⢼⠅⠀⠀⠀⠀⠀⠘⢧⡀⠈⠳⣦⢤⡀⠀⠀⠀⠈⠻⣄⠀⠀⠀⠀⠀⢹⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢸⠃⠀⠀⠀⣗
   ⠀⠀⠀⠀⢼⠀⠀⠀⠀⠀⠀⠀⠈⣳⠆⢰⡇⠸⣇⠀⠀⣀⠰⠆⠸⣇⣖⣠⣀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠸⣆⠀⠀⣠⡇
   ⠀⠀⠀⠀⢽⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⡿⠀⠀⠈⢷⣾⣽⣷⣦⣴⠏⣹⢳⣿⣆⠀⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢹⠷⢲⡏⠀
   ⠀⠀⠀⠀⣽⠀⠀⠀⠀⠀⠀⠀⠀⢻⢀⡏⠀⠀⠀⣿⡃⣾⣿⣷⠀⠀⣿⢸⣿⡟⣷⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠸⡿⢿⡏⠀
   ⠀⠀⠀⠀⣾⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⡇⠀⠀⢀⡿⢥⣽⣿⠟⠀⢀⠀⠛⠛⠛⢿⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢈⡇⢸⡇⠀
   ⠀⠀⠀⠀⣽⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⠀⠀⢸⠇⠀⠀⠀⠀⠰⠛⠃⠀⢀⣠⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⣧⣸⡇⠀
    ⠀⠀⠀⣺⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢸⡆⠀⣾⢥⣄⣀⣀⣠⣠⡴⠶⠚⠋⠁⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠈⠈⠁⠀
   ⠀⠀⠀⠀⢺⠀⠀⠀⠀⢹⡛⠶⣄⡀⠀⢾⣻⣰⡇⠀⠀⠈⠉⠈⠀⠀⠀⠀⠀⠀⣼⢧⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣯⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢹⡂⠀⠀⠀⢸⠆⠀⠈⠙⠳⣌⣿⣿⣦⣀⣀⡀⡀⠀⠀⣠⡖⠚⣞⠛⠁⠀⠙⢿⡆⠀⠀⠀⠀⠀⠀⠀⠀⡷⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢹⡆⠀⠀⠀⢸⠇⠀⠀⠀⠀⠈⢻⡿⣿⡛⠋⠉⢁⣠⠞⠻⢾⣿⣥⣤⡄⠀⠀⢨⡇⠀⠀⠀⠀⠀⠀⠀⠀⣯⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢸⡇⠀⠀⠀⣽⠀⠀⠀⠀⠀⣰⠟⠀⠈⠙⠓⠶⠛⠁⠀⢰⣾⡿⠿⣿⣴⡤⣠⡾⢧⡀⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢸⡃⠀⢀⡀⣿⠀⠀⠀⠀⠀⢯⡀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣽⣧⡴⠞⠛⠿⢯⡀⠈⠳⣄⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢸⡃⢀⡾⠹⣾⠀⠀⠀⠀⠀⠈⡽⠶⢦⣄⣀⣠⣆⣀⣠⡬⠿⠇⠀⠀⠀⠀⠀⠹⣆⠀⠈⠳⣆⡀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢸⣇⡼⠁⠀⢺⡀⠀⠀⠀⢀⡼⠃⠀⠀⢼⠉⠁⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠈⠙⢶⣄⠀⡯⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢸⣎⢷⡀⠀⠘⢧⠀⠀⢀⡾⠁⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⢀⡼⠃⣟⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢼⡏⠛⣧⠀⠀⠈⢳⣤⡟⠀⠀⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣤⠶⠋⠀⠀⣿⠀⠀⠀⠀⠀⠀  
    `,
};
const playerAdventureSprit_PM = {
  // 오후 이미지
  1: `
        ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠀⠀⠸⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠀⠀⠀⠀⠉⠳⠶⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⠦⣄⣀⣀⣀⣄⡴⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⡴⠖⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠈⠀⠀⠀⠀⠀⣰⠏⢳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⢀⡾⠁⠀⠀⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀⣴⠶⣆⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠃⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡀⠀⠀⠀⠀
      ⠀⣠⠟⠀⠀⠀⠀⠀⠹⣆⠀⠀⠀⠀⠀⢀⡾⠁⠀⠘⢧⠀⠀⠀⠀⠀⢀⡴⠏⠀⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⢀⡼⠃⠹⢦⡀⠀⠀
      ⡴⠋⠀⠀⠀⠀⠀⠀⠀⠹⡆⢠⣦⣀⠀⠛⠀⠀⠀⠀⢈⣣⠀⠀⠀⢠⠞⠁⠀⣀⡴⠛⣷⠀⠀⠘⣇⠀⠀⠀⠀⢀⡞⠁⠀⠀⠈⠳⣄⠀
      ⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⡉⠳⢦⣀⠀⠀⢠⡞⠿⠖⠲⠶⣆⣠⣴⠛⠉⣰⠄⣸⠀⠀⠀⢸⡆⠀⠀⣠⠟⠀⠀⠀⠀⠀⠀⠙⢦
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡀⠻⣄⠀⠉⠻⠷⠋⠀⠀⠀⠀⠀⠈⠈⠉⠛⢶⡋⢠⡞⠀⠀⠀⠀⢷⣀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠈
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠈⠳⣦⢤⡀⠀⠀⠀⠈⠻⣄⠀⠀⠀⠀⠀⢹⡞⠁⠀⠀⠀⠀⠀⢻⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣳⠆⢰⡇⠸⣇⠀⠀⠀⠀⠀⠸⣇⣖⣠⣀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⡀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⣾⠀⡿⠀⠀⠈⢷⣤⣀⣴⣶⣴⠏⣹⢳⣿⣆⠀⢹⠀⠀⠀⠀⢺⠶⣄⣀⣹⠄⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⢸⣧⠴⠳⣆⠀⢰⡇⠀⠀⠀⠀⢻⢀⡏⠀⠀⠀⣿⣷⣯⣷⡯⡆⠀⣿⢸⣿⡟⣷⣼⠁⠀⠀⠀⠀⠀⠈⢉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠈⠁⠀⠀⠈⠻⠺⠂⠀⠀⠀⠀⠸⣇⡇⠀⠀⢀⡟⠀⠀⠀⠀⠀⢀⠀⠛⠛⠛⢿⡁⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⠀⠀⢸⠇⠀⠀⠀⠀⠰⠛⠃⠀⢀⣠⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢸⡆⠀⣾⢥⣄⣀⣀⣠⣠⡴⠶⠚⠋⠁⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⡛⠶⣄⡀⠀⢾⣻⣰⠇⠀⠀⠈⠉⠈⠀⠀⠀⠀⠀⠀⣼⢧⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡂⠀⠀⠙⠷⣌⣿⣿⣧⣀⣀⡀⡀⠀⠀⣠⡖⠚⣞⠛⠁⠀⠙⢿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠹⡆⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠅⠀⠀⠀⠀⠈⢻⡿⣿⡛⠋⠉⢁⣠⠞⠻⢾⣿⣥⣤⡄⠀⠀⢨⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡄⠀⠀⠀⠀
      ⠀⢲⡄⠀⠀⠀⠀⣠⠄⣼⠁⠀⠀⠀⠀⣰⠟⠀⠈⠙⠓⠶⠛⠁⠀⢰⣾⡿⠿⣿⣴⡤⣠⡾⢧⡀⠀⠀⠀⠀⠀⠰⠶⢤⣤⠷⠀⠀⠀⠀
      ⠀⠀⠹⢦⣀⣀⡴⠏⠀⣿⠀⠀⠀⠀⠀⢯⡀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣽⣧⡴⠞⠛⠿⢯⡀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠉⠉⠀⠀⠀⣿⠀⠀⠀⠀⠀⠈⡽⠶⢦⣄⣀⣠⣆⣀⣠⡬⠿⠇⠀⠀⠀⠀⠀⠹⣆⠀⠈⠳⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⡀⠀⠀⠀⢀⡼⠃⠀⠀⢼⠉⠁⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠈⠙⢶⣄⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⢀⡾⠁⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⢀⡼⠃⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣤⡟⠀⠀⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣤⠶⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀
      `,
  2: `
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠃⠰⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⣀⣀⣄⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣴⠏⠀⠀⢀⡈⠳⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠚⠁⠁⢱⡆⠀⠁⣿⠳⢦⣀⡀⠀⠀⠀
   ⠀⠀⠀⣀⣠⠴⣶⠒⠛⠉⠁⠈⠈⢳⡄⠀⠀⠹⣦⣤⣽⠟⠶⢦⣤⡤⠴⠴⢤⢤⡤⡤⠆⠈⠹⡴⠖⠛⡿⠀⠀⣴⢿⣠⣠⣬⣽⣶⡶⠶
   ⢀⠴⠚⠉⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⢷⡀⠀⠀⢸⠆⠀⠀⣾⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠦⠶⠋⠛⣧⠀⠀⠀⠀⠀⠀
   ⠉⠒⠾⠲⢷⠺⠃⠀⠀⠀⠀⢰⣤⣀⠀⠻⢦⣀⣽⠀⠀⣄⠹⡟⠀⠀⠀⠀⠀⣠⡴⠛⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⣶⣄⠀⠀
   ⠀⠀⠀⠀⢸⡂⠀⠀⠀⠀⠀⣽⠀⡉⠳⢦⣀⠈⠁⢠⡞⠿⠖⠳⠶⢆⣠⣴⠛⠁⣰⠆⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⢀⡗⠸⣆⠀
   ⠀⠀⠀⠀⢹⠆⠀⠀⠀⠀⠀⢻⡀⠻⣄⠀⠉⠻⠷⠋⠀⠀⠀⠀⠀⠈⠉⠉⠛⢶⡋⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⡼⠁⠀⢹⡄
   ⠀⠀⠀⠀⢼⠅⠀⠀⠀⠀⠀⠘⢧⡀⠈⠳⣦⢤⡀⠀⠀⠀⠈⠻⣄⠀⠀⠀⠀⠀⢹⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢸⠃⠀⠀⠀⣗
   ⠀⠀⠀⠀⢼⠀⠀⠀⠀⠀⠀⠀⠈⣳⠆⢰⡇⠸⣇⠀⠀⠀⠀⠀⠸⣧⣀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⣿⠸⣆⠀⠀⣠⡇
   ⠀⠀⠀⠀⢽⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⡿⠀⠀⠈⢷⣤⣠⣴⣤⣴⠯⠟⢻⣶⣄⠀⢹⠀⠀⠀⠀⠀⢈⣄⠀⠀⠀⠀⣿⠀⢹⠷⢲⡏⠀
   ⠀⠀⠀⠀⣽⠀⠀⠀⠀⠀⠀⠀⠀⢻⢀⡏⠀⠀⠀⣿⠙⠳⢲⣮⠀⠀⠾⣏⣀⠙⢷⣼⠁⠀⠀⠀⠀⢼⡿⠀⠀⠀⠀⣿⠀⠸⡿⢿⡏⠀
   ⠀⠀⠀⠀⣾⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⡇⠀⠀⢀⡏⢤⠞⠋⠁⠀⢀⠀⠈⠉⠃⢹⡁⠀⠀⠀⠀⠀⠘⠃⠀⠀⠀⠀⣿⠀⢈⡇⢸⡇⠀
   ⠀⠀⠀⠀⣽⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⠀⠀⢸⠇⠀⠀⠀⠀⠰⠛⠃⠀⢀⣠⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⣧⣸⡇⠀
   ⠀⠀⠀⠀⣺⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢸⡆⠀⣾⢥⣄⣀⣀⣄⣤⠴⠶⠚⠋⠁⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠈⠈⠁⠀
   ⠀⠀⠀⠀⢺⠀⠀⠀⠀⢹⡛⠶⣄⡀⠀⢾⣻⣰⡇⠀⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⣼⢧⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣯⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢹⡂⠀⠀⠀⢸⠆⠀⠈⠙⠳⣌⣿⣿⣦⣀⣀⡀⡀⠀⠀⣠⡞⠒⣗⠛⠁⠀⠙⢿⡆⠀⠀⠀⠀⠀⠀⠀⠀⡷⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢹⡆⠀⠀⠀⢸⠇⠀⠀⠀⠀⠈⢻⡿⣿⡛⠋⠉⢁⣠⠞⠻⢾⣿⣥⣤⡄⠀⠀⢨⡇⠀⠀⠀⠀⠀⠀⠀⠀⣯⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢸⡇⠀⠀⠀⣽⠀⠀⠀⠀⠀⣰⠟⠀⠈⠙⠓⠶⠛⠁⠀⢰⣾⡿⠿⣿⣴⡤⣠⡾⢧⡀⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢸⡃⠀⢀⡀⣿⠀⠀⠀⠀⠀⢯⡀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣽⣧⡴⠞⠛⠿⢯⡀⠈⠳⣄⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢸⡃⢀⡾⠹⣾⠀⠀⠀⠀⠀⠈⡽⠶⢦⣄⣀⣠⣆⣀⣠⡬⠿⠇⠀⠀⠀⠀⠀⠹⣆⠀⠈⠳⣆⡀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢸⣇⡼⠁⠀⢺⡀⠀⠀⠀⢀⡼⠃⠀⠀⢼⠉⠁⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠈⠙⢶⣄⠀⡯⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢸⣎⢷⡀⠀⠘⢧⠀⠀⢀⡾⠁⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⢀⡼⠃⣟⠀⠀⠀⠀⠀⠀
   ⠀⠀⠀⠀⢼⡏⠛⣧⠀⠀⠈⢳⣤⡟⠀⠀⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣤⠶⠋⠀⠀⣿⠀⠀⠀⠀⠀⠀
    `,
};

let checkInventoryChange = false; //변경후 체크용도
let playerInventory_Status = 0; //기본 상태 : 0 그냥 확인용도 1 : 판매 2 : 교체 ;
let playerInventory = {
  // 인벤토리
  //플레이어 인벤토리
  0: [0, 0],
  1: [0, 0],
  2: [0, 0],
  3: [0, 0],
  4: [0, 0],
  5: [0, 0],
};
const stageName = {
  // 스테이지 스텍에 비례한 이름 받아오는 객체
  1: ' 뒷산 ',
  2: ' 뒷산 동굴 ',
  3: ' 동굴안 호수 ',
};
const dayName = {
  //오전 오후 그런거 적어둔곳
  1: ' 오전 ',
  2: ' 오후 ',
  3: ' 밤 ',
};
const itemData = {
  //인덱스 : 가격, 이름, 내용, 효과
  0: [
    //기본값
    0,
    '비어 있습니다.',
    '당신은 더 많은 돈을 원합니다. 어서 가방을 채워주세요. ',
    null,
  ],
  1: [50, '초록 허브', '초록 색깔의 허브입니다. 약제조에 사용됩니다.', null], //stage 1드랍템
  2: [
    100,
    '황금 사과',
    '황금색 사과입니다. 실제 황금은 아닙니다. 약제조에 사용됩니다.',
    null,
  ],
  3: [
    500,
    '마녀의 혼합물',
    '정체 모를 혼합물입니다. 귀한 재료로 약제조에 사용됩니다.',
    null,
  ],
  4: [
    //stage 2 드랍템
    200,
    '흔한 광석',
    '정말 흔한 광석입니다. 그러나 생각보다 비싼 가격에 거래됩니다.',
    null,
  ],
  5: [
    1000,
    '은 광석',
    '귀한 광석입니다. 그러나 쓸모는 없는 거 같습니다.',
    null,
  ],
  6: [
    // stage 3 드랍템
    500,
    '맑은 호수물',
    '동굴속 호수에는 다양한 성분이 들어가 있어서 약제조에 사용됩니다.',
    null,
  ],
  7: [
    1200,
    '골렘의 심장',
    '반짝이는 골렘의 보석 입니다. 왜 여기 있을까요? 약 제조에 사용됩니다. ',
    null,
  ],
};

class Dice {
  constructor() {
    this._luck = 0;
    this._str = 0;
    this._dex = 0;
  }
  random() {
    function randomTemp(value) {
      let index = 0; //반복 확인 값
      while (value > 0) {
        let temp = parseInt(Math.random() * value);
        switch (index) {
          case 0: //럭 증가
            this._luck += temp;
            value -= temp;
            break;
          case 1: // 힘 증가
            this._str += temp;
            value -= temp;
            break;
          case 2: // 덱 증가
            this._dex += value;
            value -= value;
            break;
        }
        index++;
      }
    }
    this._luck = 0;
    this._str = 0;
    this._dex = 0;

    let statsPoint = 0; //스텟 기본값

    if (randomMaker(10)) {
      statsPoint += 15;
      randomTemp.call(this, statsPoint);
    } else {
      statsPoint += 10;
      randomTemp.call(this, statsPoint);
    }
  }
}
class Player {
  constructor() {
    this._hp = 100; //max hp입니다.
    this._hpPercent = 1;
    this._level = 1;
    this._exp = 0;
    this._levelUpExp = 100; //레벨업에 필요한 경험치량
    this._atck = 1;
    this._luck = 0;
    this._str = 0;
    this._dex = 0;
    this._playerSkillPoint = 0; //스킬 포인트
    this._dotSprit = {
      1: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣦⣀⠀⠀⠀⠀⠀⠀⢀⣠⠀⠀⠀⠀⠀  ⠀⠀⣀⡴⠞⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⡉⠳⢦⣀⠀⠀⢠⡞⠿⠖⠲⠶⢆⣠⣴⠛⠉⣰⠄⣹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡀⠻⣄⠀⠉⠻⠷⠋⠀⠀⠀⠀⠀⠈⠉⠈⠛⢶⡋⢠⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠈⠳⣦⢤⡀⠀⠀⠀⠈⠻⣄⠀⠀⠀⠀⠀⢹⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⣠⠶⠖⠛⠛⢹⣿⡗⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⠆⢰⡇⠸⣇⠀⠀⣀⠰⠆⠸⣇⣖⣠⣀⠀⠀⣯⠀⠀⠀⠀⠀⠀⠀⠀⣸⠇⠀⣀⣤⣶⡿⢿⣿⡄
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⡿⠀⠀⠈⢷⣾⣽⣷⣦⣴⠏⣹⢳⣿⣆⠀⢹⠀⠀⢀⡀⠀⠀⠀⢠⡏⢀⡴⠋⢉⣹⣅⠘⣿⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⢀⡏⠀⠀⠀⣿⡃⣾⣿⣷⠀⠀⣿⢸⣿⡟⣷⣼⠁⠀⢸⡋⠳⣆⢀⡟⣠⡟⣴⠛⠛⠿⠿⣿⣿⠃
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⡧⠀⠀⢀⡿⢥⣽⣿⠟⠀⢀⠀⠛⠛⠛⢿⡁⠀⠀⠀⠙⠳⢿⣿⣿⣿⢹⡃⠀⠀⠀⠀⣼⠇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⠀⠀⢸⠇⠀⠀⠀⠀⠰⠛⠃⠀⢀⣠⣞⠁⠀⠀⠀⠀⢰⣿⣿⡿⠋⠀⠹⡶⠶⠖⠛⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢸⡆⠀⣾⢥⣄⣀⣀⣠⣠⡴⠶⠚⠋⠁⢹⡆⠀⠀⠀⠀⣸⣿⣿⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡛⠶⣄⡀⠀⢾⣻⣰⡇⠀⠀⠈⠉⠈⠀⠀⣀⠀⠀⠀⣼⣇⠀⠀⠀⢰⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⡂⠀⠀⠙⠷⣌⣿⣿⣦⣀⣀⡀⠀⠀⠐⣺⣿⣓⣗⠛⠁⠘⢧⡀⢀⣾⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠆⠀⠀⠀⢀⡾⠻⠿⣿⡛⠋⠉⢁⣰⣾⣿⠟⣯⢋⡁⠀⠀⢀⣿⣼⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⠀⠀⠀⢀⡼⠁⠀⠀⠈⠙⠓⠶⠛⢡⣄⣼⡷⠿⣿⣏⣠⣴⠛⣸⣿⡟⠙⢲⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠺⣅⣀⠀⠀⠀⢠⣄⠀⠀⠙⢻⡏⠀⠀⠈⠋⠉⠉⠛⠛⠿⢦⣰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⠀⠀⠈⠉⠳⠶⡶⠻⢽⡚⠖⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⣠⠶⣻⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⡀⠀⠀⠀⠀⠀⠀⢸⠇⠀⠈⠹⢦⡀⠀⠀⠀⠀⠀⠀⠀⢀⣾⢋⡼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⡿⠀⠀⠀⠀⠀⠙⠷⣄⠀⠀⠀⣠⣾⣿⣯⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣄⠀⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠈⠛⠖⠟⢹⣿⡏⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
      2: `
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⡀⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢰⠟⢾⡆⠀⠀⠀⠀ ⢀⣶⣶⣂⣀⡀⠀⠀⢀⣀⡤⠶⠛⠉⢸⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⡿⢀⡌⠙⢶⣶⠘⢀⡞⠙⠉⠁⠉⠙⠚⠚⠻⢧⣄⣠⠾⠁⣽⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣿⠀⠹⣆⡀⠘⠻⡏⠁⠀⠀⢠⣀⠀⠀⠀⠀⠀⠈⢻⣄⡼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠸⣇⠀⠘⠻⠶⢤⡀⠀⠀⠀⠀⠉⢳⡄⠀⠀⠀⠀⠈⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠙⢷⡆⠀⢠⡟⢧⡀⠀⠀⠀⠀⠀⣿⠓⣶⣤⣀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⢀⡾⠀⠈⢙⣷⣶⣶⣛⠛⠃⣼⡋⠈⢿⡻⣦⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⢸⡃⠀⠀⢘⡇⠈⣨⠏⠀⣀⡀⢙⣷⡎⠳⢯⣵⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣾⠀⠀⠀⢸⠇⣴⣯⡀⠘⠋⠁⠀⠁⠀⣀⣾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⡾⠁⠉⠁⠀⠀⠀⢀⣀⡴⠞⠉⠈⣿⣦⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⡄⠀⢸⣟⠷⠶⠶⠶⠖⠞⠋⠁⠀⠀⠀⠀⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⣾⠛⠃⠉⠀⠀⠀⠀⠀⠀⣤⠶⠖⠛⠳⢦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣼⣿⣶⣦⣤⣤⣤⡄⠀⢠⡞⣁⣸⡆⠀⠀⠀⠙⢿⡴⠤⣤⣤⣤⣀⣄⣀⣀⢀⢀⠀⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣿⣹⠿⢿⣏⣉⣀⢀⡴⠿⠷⣿⣯⣴⡶⠀⠀⠀⣼⠃⠀⠀⠀⠀⠀⠁⠉⠉⠛⣿⠃⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡟⠁⠀⠀⠈⠉⠉⠉⠁⠀⣿⣿⡟⠻⣷⣷⣆⡾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠫⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⡶⠛⠉⠙⠋⢷⣄⡀⠀⠀⠀⠀⠀⠀⣠⠾⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠇⠀⠈⢻⡗⠶⢤⢤⣶⣆⣤⢴⣾⣛⠀⠀⠀⠀⠀⠈⠹⣟⠶⢦⣀⣀⣤⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⡁⠀⠀⠀⢻⡄⠀⠀⠀⠀⠀⠀⠈⠉⠳⣷⡗⠘⠀  ⠀⠀⠙⣦⣄⡉⡉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⣹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣄⠀⠀     ⠀⠘⢿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
      3: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣦⣀⠀⠀⠀⠀ ⠀⠀⠀⣄⠀⠀⠀⠀⠀⠀⠀⣀⡴⠞⢯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⠀⡉⠳⢦⣀⠀⠀⢠⡞⠿⠖⠳⠲⣆⣠⣴⠛⠉⣠⠆⣹⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡀⠻⣄⠀⠉⠻⠷⠋⠀⠀⠀⠀⠀⠈⠈⠉⠛⢶⡋⢠⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠈⠳⣦⢤⡀⠀⠀⠀⠈⠻⣄⠀⠀⠀⠀⠀⢹⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣳⠆⣰⠏⠘⣇⠀⠀⣀⠴⠄⠸⣗⣃⣄⣄⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⣾⠀⠀⠈⣷⣾⣽⣷⣦⣴⠏⣽⢳⣿⣆⠀⢺⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⠠⡗⠀⠀⠀⣾⡇⣾⣿⣷⠀⠀⢿⢸⣿⡟⣷⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⣗⠀⠀⢀⡿⢢⣽⡿⠯⠀⢀⠀⠛⠛⠙⢿⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⠀⠀⢸⡃⠀⠀⠀⠀⠸⠛⠂⠀⢀⣠⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⠀⣾⢤⣄⣄⣀⣠⣠⡴⣶⢾⢯⣅⣹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣻⣰⡇⠀⠀⢈⡼⠋⠉⠹⣏⠀⠀⠀⠉⠉⠳⠶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣦⣀⣴⠋⠁⠀⠀⠀⠸⡄⠀⠀⠀⠀⠀⠀⠀⠙⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⡿⣿⠟⠁⠀⠀⠀⠀⠀⠀⢻⡀⠀⠀⠀⠀⠀⠀⠨⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⣰⠋⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣯⣰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⣀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⠙⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣺⠀⠀⠀⠀⢀⣼⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠷⣄⣀⣰⠏⠙⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠳⣤⣠⡴⠖⠛⠉⠋⠋⠛⠓⠛⠁⠀⠈⠉⠀⠀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀   ⠀⠀⠻⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
      4: `
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠞⠋⠁⠉⠈⠈⠉⠉⠁⠹⣆⠀⠀⠀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⣀⣀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⣀⡴⠞⠉⠈⠉⠛⠦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⣶⠋⣻⡿⠁⠀⠀⠀⢀⣀⣀⣄⣠⣀⣀⡀⣼⠟⠉⠀⠀⠀⣠⠶⠚⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⢸⣆⣿⠇⠀⣠⡴⠞⠋⠉⠀⠀⠀⠈⠉⠉⠛⠲⢦⣀⣠⠾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⢸⣽⣿⣠⣾⠏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢻⡄⠀⠀⠀⠀⠀⠀⢀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⣰⠏⣁⡙⢷⡀⠀⠀⠀⠀⠀⣰⠖⠓⠲⢦⡀⠀⠀⠀
      ⠀⠀⠀⠀⢽⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⢀⣯⣀⠀⠀⠀⠀⠸⣇⡻⠴⠾⠁⢀⣠⣤⠀⠐⣇⠰⣏⠛⢀⣻⠀⠀⠀
      ⠀⠀⠀⠀⢸⡿⠀⠀⠀⠀⠀⠀⢀⣀⡀⠠⠶⠶⠺⠚⠛⠉⠀⠈⠁⠉⢷⡀⠀⠀⠀⠈⠀⠀⠀⠀⠘⠁⠸⠀⠀⠘⠃⠙⠓⠋⠁⠀⠀⠀
      ⠀⠀⠀⠀⢸⠇⠀⠀⠀⢀⣰⠖⠋⠁⠀⠀⠀⠀⠀⠀⠀⣠⠶⠳⢦⠀⠘⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠸⣇⡀⠀⠀⢸⡅⠀⠀⢀⣶⡆⠀⣤⠶⠖⠀⠀⠀⠀⠀⠰⢦⣿⠙⢦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠈⠙⠖⣶⣿⠀⠀⢀⣾⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⠉⠳⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⣸⣿⡏⠀⢀⣾⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠈⢷⡀⠀⠉⠳⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⢠⡏⢻⣷⣄⣸⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⠀⢻⡄⠀⠀⠀⣻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⢠⡟⠀⠀⠙⢿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠁⠀⠀⢹⡤⠴⠞⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⢀⡾⠀⠀⠀⠀⠈⢻⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢁⢀⢀⣀⣰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠸⣇⠀⠀⠀⠀⠀⠀⢻⣿⠿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠉⠈⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠙⠳⣄⡀⢀⣀⣤⢼⡟⠀⠀⠙⠶⢶⣤⣤⣤⢤⠶⠚⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠈⠙⠉⠁⠀⠸⣇⣀⣠⡤⠞⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      
`,
    };
  }
  get hp() {
    return parseInt(this._hp * this._hpPercent);
  }
  set hp(value) {
    // 데미지 받으면 음수로 집어넣기
    let temp = (this.hp + value) / this._hp;
    if (temp >= 1) {
      this._hpPercent = 1; // HP가 최대일 때
    } else if (temp <= 0) {
      this._hpPercent = 0; // HP가 0 이하일 때
    } else {
      this._hpPercent = temp;
    }
  }
  level_Up(value) {
    this._exp += value;
    if (this._exp >= this._levelUpExp) {
      this._level++;
      this._playerSkillPoint += 2;
      this._exp = this._exp - this._levelUpExp;
      this._hp += parseInt((this._str / 5) * 10 + 10);
      this._atck += parseInt((this._str * 5) / 10 + 1); // 기본 1올라감 힘비례 해서 강해짐
    }
  }
}

class Monster {
  //몬스터 데이터
  constructor() {
    this._hp = 10;
    this._atck = 1;
    this._exp = 40;
    this._gold = 50;
    this._firstCheck = true;
    this._name = {
      1: '슬라임',
      2: '화난 꽃',
      3: '타락한 골렘',
      4: '화난 불의 정령',
      5: '물의 정령',
      6: '공격하는 바람의 정령',
    };
    this._dotSprit = {
      1: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⠶⠶⠷⢶⣦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⡟⠋⠀⠀⠀⠀⠀⠀⠉⠛⠻⢶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠿⣶⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⣧⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣄⣀⠀⠀⠀⠀⠈⠹⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠠⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⡟⠋⠉⠛⣧⡀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⡏⠀⠀⠀⠀⠘⣷⡀⠀⠀⠀⠀⠀⠘⢿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣾⣁⣀⢀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠀⠀⠀⠀⠀⠀⢹⡇⠀⠀⠀⠀⠀⠀⠘⢿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠿⠿⢿⢿⣿⡧⠀⠀⣄⡀⠀⢀⣿⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠩⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⢨⣿⣯⡀⣼⣿⣿⣆⢐⣿⠀⠀⠀⠀⠀⠀⢸⣯⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣾⠿⣦⣠⣾⣿⣿⣾⣿⣿⣿⣷⢨⡗⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣸⡏⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣟⠸⣇⠀⠀⠀⠀⠀⠀⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣼⠏⠀⠀⠘⣿⠟⢽⣿⣿⣿⣿⡿⠁⠨⣷⠀⠀⠀⠀⠀⣨⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢠⡾⠋⠀⠀⠀⠀⠀⠀⠚⢿⢿⠟⠏⠀⠀⠀⠹⠷⣶⣤⣴⣼⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣗⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣺⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣆⠀⠀⠀⠀⠀⠀
⠀⢀⣿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣦⠀⠀⠀⠀⠀
⠀⢐⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⡀⠀⠀⠀
⠀⠠⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢷⣄⠀⠀
⠀⠐⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀
⢠⣾⣿⣿⣿⣿⣦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡇
`,
      2: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⣶⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⡶⣷⣶⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⡿⠛⠁⠀⠀⠈⠉⠻⣷⣄⠀⠀⠀⠀⠀⣠⣾⠟⠁⠀⠀⠀⠉⠛⢿⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣦⠀⠀⢀⣼⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠘⢻⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣾⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣇⢀⣿⠏⠀⠀⠀⠀⠀⣠⣶⠆⠀⠀⠀⠀⢹⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣾⡟⠀⠀⠀⠀⠀⣄⡀⠀⠀⠀⠀⠀⠀⠘⣿⣿⡏⠀⠀⠀⠀⢀⣼⡿⠁⠀⠀⠀⠀⠀⢨⣿⠂⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠰⣿⠁⠀⠀⠀⠀⠀⢻⣷⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⢀⣾⠟⠀⠀⠀⠀⠀⠀⠀⣸⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⢿⣧⠀⠀⠀⠀⠀⠀⡻⡇⡀⡀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⢀⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠸⣿⡀⠀⠀⠀⠀⠀⠀⠀⠛⠃⢀⣤⣴⣾⠿⠟⠟⠟⠟⢿⣶⣤⡀⠀⠀⠀⠀⠀⢀⣠⣾⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⣿⣆⠀⠀⠀⠀⠀⠀⠀⢠⣾⡟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣦⡀⣠⣶⣶⣿⣿⣷⣦⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠘⣿⣄⠀⠀⠀⠀⠀⣰⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣷⡈⠉⠀⠀⠀⠀⠈⠉⠛⠻⢿⣦⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣷⣤⡀⠀⣰⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣄⠀⠀⠀
⠀⠀⠀⠀⠀⣀⣴⡾⠿⠻⠛⠉⠀⢰⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣿⠄⢀⣤⣤⣤⣤⣤⠀⠀⠀⠀⠘⣿⡄⠀⠀
⠀⠀⠀⣠⣾⠟⠉⠀⠀⠀⠀⠀⠀⣸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠈⠉⠉⠉⠉⠁⠀⠀⠀⠀⣼⡿⠀⠀⠀
⠀⢀⣼⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⣺⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⣀⣾⡟⠁⠀⠀⠀
⠀⣾⡟⠀⠀⠀⠀⢀⣠⣤⣶⣶⣶⢸⣿⠀⠀⠀⠀⠀⣠⣶⣄⠀⠀⢠⣴⣾⣶⣄⣰⣿⣟⢋⣥⠀⣦⣤⣀⣀⣀⣤⣶⡿⠋⠀⠀⠀⠀⠀
⢰⣿⠁⠀⠀⠀⠿⠿⠛⠉⠀⠀⠀⠘⣿⣄⣤⣤⢀⣴⣿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣄⠁⠀⠈⠙⠻⠿⣿⣯⣁⠀⠀⠀⠀⠀⠀⠀
⢺⣯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⠿⣿⠄⠀⠀⠀⠀⠀⠈⠙⠻⣷⣄⠀⠀⠀⠀⠀
⠸⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡿⣿⣿⠿⠋⠈⠻⢿⡿⠛⠋⠀⠀⠉⠛⠋⣸⣿⠁⢶⣶⣤⣄⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀
⠀⠙⣿⣤⡀⠀⠀⢀⣀⣤⣶⣦⣄⠀⠀⠿⣷⣌⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠃⠀⠀⠈⠉⠋⠀⠀⠀⠀⣸⡿⠀⠀⠀⠀⠀
⠀⠀⠈⠙⠿⠿⠿⠟⠛⢉⣿⡟⠁⠀⠀⠀⢈⡻⢿⣶⣤⣀⣀⠀⠀⠀⢀⣠⣤⣶⡿⠋⠁⢀⣄⠀⠀⠀⠀⠀⢀⣠⣾⠟⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡿⠀⠀⠀⠀⣰⣿⠃⠀⠈⠉⠛⠻⠿⠿⠿⠟⠛⠉⠀⠀⠀⠾⣿⡿⢷⣶⣤⣴⣶⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠠⣿⡃⠀⠀⠀⢠⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣷⠀⠀⠀⠀⠀⠹⣿⡀⠀⠉⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠨⣿⡂⠀⠀⠀⠻⠇⠀⠀⠀⠀⢺⣷⠀⠀⠀⠀⠀⠿⠇⠀⠀⠀⠀⠨⣿⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡿⠀⠀  ⠀⠀⢀⣠⣶⠿⢿⣶⣄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣄⠀⠀⠀⠀⠀⠀⣀⣼⡿⠙⣿⣿⣦⡀⠀⠀⠀⠀⣀⣤⣾⠟⠁⠀⠀⠀ ⣠⣾⠟⠁⠀⠀⠈⠻⣷⡄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⣷⣶⣴⣴⣶⠿⠟⠋⠀⠀⢽⡯⠙⢿⣶⣴⣶⣿⠟⢻⣷⣤⣀⠀⢀⣾⡟⠁⠀⠀⠀⠀⠀⠀⠙⣿⡄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠁⠀⠀⠀⠀⠀⠀⣺⡯⠀⠀⠀⠀⣺⣿⣤⣀⠈⠙⠛⠿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀   ⠀⢹⣿⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⠃⠀⠀⢀⣴⡿⠃⠙⠻⢷⣦⣄⠀⠀⠀⢠⣦⣴⣾⣄⠀⣀⡀⣀ ⡀⣿⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡟⠁⠀⢀⣰⣾⠏⠁⠀⠀⠀⠀⠉⣿⡇⠀⠀⣾⣿⣿⣿⣿⣶⣿⣿⡟⢿⢿⠇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⠋⠀⠀⣤⣿⠏⠁⠀⠀⠀⠀⠀⠀⠀⢿⡇⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣆⡀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡟⠁⠀⣠⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⡄⠀⠀⠀⠙⠿⠿⠟⠛⠛⠉⣿⡇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠏⠀⠀⢰⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣷⣶⣤⣤⣀⣀⣄⣤⣤⣾⠿⠁⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠛⠙⠉⠉⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣷⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
      3: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣶⣾⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠋⠈⠙⢦⡀⠀⠀⠀⢰⣾⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣶⣶⣿⣶⠀⠀⠀⠀⠀⢀⡴⠞⠁⠀⠀⣶⠀⠈⠹⣄⠀⠀⠀⠛⠿⢿⠿⢿⣿⣿⣿⡧⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣶⣿⣿⣿⡿⠏⠀⠀⢀⣠⠞⠋⠀⠀⠀⠀⢠⡇⠀⠀⠀⠙⢧⡀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢻⣿⡿⠁⠀⣀⡴⠋⠁⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠈⢳⡶⠶⣤⡀⠀⢀⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣄⠾⠉⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡅⠀⠀⠀⠀⠀⣀⣷⠆⠀⢻⣶⣿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⡿⠀⠀⠀⣀⣀⢀⣀⣠⡴⠾⢿⣿⣿⣶⡄⠀⢠⡞⠉⠀⠀⠀⣾⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠇⠀⠀⠀⠈⠉⣿⡿⠉⠀⠀⠀⠙⣿⣿⣿⣤⡾⢀⣠⣶⣦⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠁⠀⠀⠀⠀⢀⣿⡇⣰⣆⠀⠀⠀⢸⣿⣿⡟⠙⠉⠁⣾⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⠀⠀⠀⢸⣿⣷⡈⠿⠀⠀⠀⢐⣿⠟⠀⠀⠀⠀⠹⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡃⠀⠶⢓⣃⠀⠈⢻⣿⣧⣀⠀⠀⣀⡼⠿⠆⠰⠶⠶⠄⣴⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣶⣾⣫⠽⠃⠀⠀⢈⡛⠛⢻⣿⠋⠀⠀⠀⠀⠀⠀⢀⣹⠿⠉⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⣿⣆⠀⠀⣀⡶⠀⠀⠀⢸⡿⠀⠀⠀⠀⢀⣠⠶⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣦⠐⠋⠀⠀⠀⠀⢸⡗⠀⠀⣠⡴⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣷⡶⢤⣤⣠⣀⣸⣿⣰⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡷⠀⠀⠀⠉⠉⢻⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠸⢿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
      4: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⢶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⠀⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠃⠀⠀⢸⡆⣀⣀⠀⠀⠀⠀⠀⠀⠀⣀⡴⠛⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡼⠃⠀⠀⠀⠐⢟⣽⠿⠲⠶⠶⠲⠖⠖⠛⠉⠀⠀⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠁⠀⠀⠀⠀⠀⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⣻⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠏⠀⠀⣠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⠾⢻⣀⡴⢶⠄⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⠀⠀⠀⢰⡏⢻⡀⠀⢀⣄⠀⠀⣠⡴⠛⠉⠀⠀⢸⡟⢁⡟⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠁⠀⠀⠀⣠⠟⠀⠸⡧⠶⠏⠛⠋⠋⠁⢀⡀⣄⠀⠀⢸⠅⠀⢳⡄⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡞⠁⠀⠀⢀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢛⣁⢉⡥⠀⠀⠀⠀⠀⣻⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠁⠀⠀⣠⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⡀⠉⠙⠀⠁⠀⠀⢀⣠⡴⠞⠀⠀⢼⠂⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⠀⠀⠀⣰⠏⠀⠀⠀⣀⡀⠀⠀⠀⠀⣰⣿⣿⣷⡀⠀⠀⠀⠀⢰⡏⠁⠀⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⣟⠀⠀⠀⣼⣿⣿⡀⠀⠀⠀⢸⣿⣿⣿⡇⠀⠀⠀⠀⠸⡇⠀⠀⠀⠀⣸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢼⠀⠀⠀⠀⢻⡀⠀⠀⢺⣿⣿⡇⢠⣤⡀⠸⣿⣿⣿⡇⠀⠀⠀⢀⡼⠃⠀⠀⠀⢰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢹⡀⠀⠀⠀⠈⣧⠀⠀⠘⢿⣿⠇⠘⠈⠃⠀⠈⠛⠋⠁⠀⠀⠰⢯⡁⠀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠸⡇⠀⠀⠀⠀⠙⢷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⡀⡀⣀⣠⡟⠀⢀⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣆⠀⠀⠀⠀⠀⠘⠷⣄⡀⠀⠀⠀⢀⣀⣤⠶⠋⠉⠉⠉⠉⠁⠀⢠⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⡀⠀⠀⠀⠀⠀⠈⠉⠛⠛⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⢀⡴⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣄⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⡴⠏⠳⣤⣀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⠶⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠓⠶⠶⠲⠖⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
      5: `
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⣬⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⠦⡼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠞⠛⠛⠶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠁⠀⣰⠦⣆⠙⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡅⠀⣠⣜⢟⠉⠀⠈⠹⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠀⠀⢷⣉⡉⠳⣆⠀⠀⠈⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠁⠀⢀⣤⣈⠻⣄⠸⡇⠀⠀⠐⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠃⠀⠀⠀⣼⠂⠙⣦⠹⡮⠇⠀⠀⠀⢹⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣤⠶⠚⠋⠁⠀⠀⢀⣠⠾⠁⠀⠀⠸⣆⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠚⠋⠉⠈⠁⠀⠀⡀⣀⣠⡤⠶⠋⠁⠀⠀⠀⠀⠀⢹⡄⠀⠀⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠞⠁⠀⢀⡴⠖⠗⠛⠙⠙⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⣸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⢀⡼⠃⠀⠀⣰⠏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡂⠀⠀⠀⢀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⢸⡃⠀⠀⢀⡏⠀⠀⣴⡟⠀⠀⠀⣠⡶⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⠀⠀⠀⢀⡼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠐⣇⠀⠀⢿⡗⠀⠀⢐⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠃⠀⠀⢠⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠨⡇⠀⠀⠀⢻⠀⠀⠉⠁⠚⠶⠐⣿⡟⠀⠀⠀⠀⠀⠀⠀⣠⠾⠁⠀⠀⣠⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡀⠀⠀⠀⠒⣀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⢀⣤⠞⠋⠀⠀⢠⡞⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠶⣤⡀⠀⠉⠳⢦⣄⣀⡀⡀⠀⡀⣀⣤⠶⠋⠂⠀⠀⢀⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠶⣄⡀⠀⠀⠉⠉⠙⠙⠉⠉⠀⠀⠀⢀⣤⠞⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠶⣤⣄⣀⣀⣀⣀⣠⣠⠴⠞⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠉⠉⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

      
`,
      6: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠞⠁⢺⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⠶⠋⠀⠀⢀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡴⠚⠉⠀⠀⠀⠀⢀⡼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠞⠋⠁⠀⠀⠀⠀⠀⢀⣠⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠉⠀⢀⣠⣠⣠⣠⣀⠀⣐⣿⣧⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⡁⠀⠀⢷⡈⠀⠀⠀⠉⠓⢿⣿⠇⠙⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⠀⠀⠈⠓⠀⠀⠀⠀⠀⠈⢳⡄⠀⣸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡟⠳⣄⠀⠀⠀⠀⢠⣦⠀⠀⠨⣧⣼⣣⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⡧⠀⠀⣺⣧⠀⠀⢸⣿⡇⣄⣤⣿⡿⠋⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡆⠀⠘⠟⠘⠛⠀⢛⣃⢀⠀⠁⠀⠀⠀⢹⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠙⣿⣦⡀⠀⠀⠀⢀⣈⣿⣿⠟⠀⠀⠀⢀⠝⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⠋⠉⠛⣿⣿⣷⣿⡿⠟⠋⠁⠀⠀⢀⡴⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⢦⣼⠃⠛⠉⠀⠀⠀⠀⣀⣤⣾⣿⣷⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠆⠀⠀⢀⡀⠛⠻⠛⠛⠉⣉⣁⡽⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣽⡀⠀⠀⠈⠉⠛⠖⠶⠶⠶⠈⢙⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠞⣫⣽⣿⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⣰⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⡸⣿⣿⣿⣿⢿⣿⣿⣷⣶⣶⡄⣠⣶⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⡟⠩⣭⣼⣶⣿⣿⣿⣿⢿⣫⣾⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
    };
  }
  get hp() {
    if (this._firstCheck) {
      this._firstCheck = false;
      this._hp += parseInt(10 * day * stageStack);
      this._atck += parseInt((day / 2) * stageStack);
    }
    return this._hp;
  }
  set hp(value) {
    this._hp += value;
  }
  get gold() {
    let reward = parseInt(this._gold * day * stageStack);
    return reward;
  }
  set gold(value) {
    this._gold += value;
  }
}
const adventure = async (player) => {
  let stageMaxCount = 9; //최대 값
  // 아랫값 선택지 선택시 다음 스테이지 이동 스텍 확률
  let leftPercent = 0;
  let middlePercent = 0;
  let rightPercent = 0;
  const changePercent = (value) => {
    // 각 길의 확률 랜덤 설정
    let index = 0; //반복 확인 값
    while (value > 0) {
      let temp = parseInt(Math.random() * value);
      switch (index) {
        case 0: //럭 증가
          rightPercent = temp;
          value -= temp;
          break;
        case 1: // 힘 증가
          leftPercent = temp;
          value -= temp;
          break;
        case 2: // 덱 증가
          middlePercent = value;
          value = 0;
          break;
      }
      index++;
    }
  };
  const checkDayCount = () => {
    if (dayStack >= 3) {
      day++; // 날짜
      dayStack = 1;
    } else {
      dayStack++; // 날 오전 오후 저녁 정하기 위한 스텍
    }
  };
  const checkStageCount = (value) => {
    // 길찾는 매커니즘
    if (randomMaker(value)) {
      // 성공
      stageCount++;
      if (stageCount > stageMaxCount && maxStage > stageStack) {
        stageStack++;
        stageCount = 1;
      }
      return true;
    } else {
      //실패
      stageCount--;
      if (stageCount <= 1 && stageStack > 1) {
        stageStack--;
        stageCount = stageMaxCount - 1;
      } else {
        if (stageCount <= 1) {
          stageCount = 1;
        }
      }
      return false;
    }
  };
  const randomEventCheck = (value, player) => {
    // 기본 20퍼 50퍼 50퍼 나머지 실패. 개별 확률 적용
    //이벤트 확률 적용
    if (randomMaker(20)) {
      //스페이셜
      adventureEvent_Special(player, checkStageCount(value));
    } else if (randomMaker(50)) {
      //성공
      adventureEvent_Succes(player, checkStageCount(value));
    } else if (randomMaker(50)) {
      //배틀
    } else {
      //실패
      adventureEvent_Failed(player, checkStageCount(value));
    }
  };
  while (true) {
    console.clear();
    changePercent(100);
    displayAdventure(
      player,
      stageName,
      stageStack,
      playerAdventureSprit_AM,
      playerAdventureSprit_PM,
      dayName,
      dayStack,
      day,
      stageCount,
    );
    console.log(
      chalk.green(
        `\n1.오른쪽으로 이동 ${rightPercent}% 2.왼쪽으로 이동 ${leftPercent}% 3.앞쪽으로 이동 ${middlePercent}% 4. 베이스켐프로 돌아가기`,
      ),
    );
    player.hp == 0
      ? console.log(chalk.redBright(`( hp : 0 이면 진행 불가 휴식 해주세요. )`))
      : console.log();
    const choice = readlineSync.question(`choose_number : `);
    switch (parseInt(choice)) {
      case 1:
        if (player.hp != 0) {
          checkDayCount();
          adventureEvent_Battle(player, checkStageCount(rightPercent));
        }
        break;
      case 2:
        if (player.hp != 0) {
          checkDayCount();
          adventureEvent_Special(player, checkStageCount(leftPercent));
        }
        break;
      case 3:
        if (player.hp != 0) {
          checkDayCount();
        }
        break;
      case 4:
        return;
      default:
        console.log(chalk.green(`다시 입력해주세요.`));
        break;
    }
  }
};
const adventureEvent_Battle = async (player, check) => {
  // 배틀 걸림
  let monsterId = 1; //몬스터 id
  checkStageAccount();
  const checkStageAccount = () => {
    switch (stageStack) {
      case 1:
        if (randomMaker(60)) {
          monsterId = 1;
        } else if (randomMaker(40)) {
          monsterId = 2;
        } else {
          monsterId = 3;
        }
        break;
      case 2:
        if (randomMaker(60)) {
          monsterId = 4;
        } else {
          monsterId = 5;
        }
        break;
      case 3:
        if (randomMaker(60)) {
          monsterId = 6;
        } else {
          monsterId = 7;
        }
        break;
    }
  };
  let checkFirstWatch = true;
  const monster = new Monster();
  //console.log(monster.hp);

  const player_Atck = (player, monster, monsterId) => {
    let checkDexOneMoreChance = true; //한번더 처음 터지면 체크
    let checkOneMore = false;
    let checkCritical = false; //크리티컬

    while (true) {
      if (
        randomMaker(
          checkDexOneMoreChance
            ? parseInt(10 * (0.2 * player._dex))
            : parseInt(2 * (0.2 * player._dex)),
        )
      ) {
        checkOneMore = true; //한번더 활성화
      }
      if (parseInt(30 * (0.2 * player._luck))) {
        checkCritical = true;
      }
      console.clear();
      displayAdventure_Battle(
        player,
        monster,
        checkCritical
          ? `| 플레이어의 공격! : ${
              player._atck * 2
            } 크리티컬 데미지 | 몬스터 체력 : ${monster.hp} | 플레이어 체력 : ${
              player.hp
            } | `
          : `| 플레이어의 공격! : ${player._atck} 데미지 | 몬스터 체력 : ${monster.hp} | 플레이어 체력 : ${player.hp} | ` +
              monsterId,
        monsterId,
        false,
        stageName[stageStack],
      );
      const choice = readlineSync.question(' Please type in any key ');
      checkCritical
        ? (monster.hp = -player._atck * 2)
        : (monster.hp = -player._atck);

      if (monster.hp <= 0) {
        //보상 메커니즘
        console.clear();
        displayAdventure_Battle(
          player,
          monster,
          `| 몬스터를 해치웠습니다. 보상 : EXP [ ${monster._exp} ] gold [ ${monster.gold} ]|`,
          1,
          true,
          stageName[stageStack],
        );
        const choice = readlineSync.question(' Please type in any key ');
        player.level_Up(monster._exp);
        playerGold += monster.gold;
        if (randomMaker(parseInt(10 * (0.2 * player._luck)))) {
          adventureEvent_Succes(player, check);
        }
        return;
      }

      if (checkOneMore) {
        //한번더 공격 체크용도
        checkDexOneMoreChance = false;
        checkOneMore = false;
        checkCritical = false;
      } else {
        // 몬스터 턴
        monster_Atck(player, monster, monsterId);
      }
    }
  };
  const monster_Atck = (player, monster) => {
    //몬스터 공격
    let checkEvade = false;
    checkEvade = randomMaker(parseInt(5 * (0.2 * player._dex)));
    console.clear();
    displayAdventure_Battle(
      player,
      monster,
      checkEvade
        ? `| 무사히 회피하셨습니다! |`
        : `| 몬스터의 공격! : ${monster._atck} 데미지 |`,
      checkEvade ? 3 : 2,
      true,
      stageName[stageStack],
    );
    const choice = readlineSync.question(' Please type in any key ');
    checkEvade ? player.hp : (player.hp = -monster._atck); //공격력 비례 데미지
    if (player.hp <= 0) {
      console.clear();
      displayAdventure_Battle(
        player,
        monster,
        `| 체력을 모두 잃으셨습니다. |`,
        4,
        true,
        stageName[stageStack],
      );
      const choice = readlineSync.question(' Please type in any key ');
    }
  };
  while (true) {
    console.clear();
    displayAdventure_Battle(
      player,
      monster,
      checkFirstWatch
        ? `| ${monster._name[monsterId]} 가 나타났습니다. 몬스터 체력 : ${monster.hp} 몬스터 공격력 : ${monster._atck} |`
        : `| 어서 행동을 선택해주세요! | 정보 | 이름 : ${monster._name[monsterId]}  몬스터 체쳑 : ${monster.hp} 몬스터 공격력 : ${monster._atck} |`,
      1,
      true,
      stageName[stageStack],
    );
    console.log(
      chalk.green(
        `\n1. 싸운다 2. 도망친다 확률 ${parseInt(
          30 * (0.2 * player._dex),
        )}. 현재 체력 : ${player.hp} 현재 공격력 : ${player._atck} `,
      ),
    );
    const choice = readlineSync.question('choose_number : ');
    switch (parseInt(choice)) {
      case 1:
        player_Atck(player, monster, monsterId);
        return;
      case 2:
        if (randomMaker(parseInt(30 * (0.2 * player._dex)))) {
          return;
        }
        monster_Atck(player, monster);
        break;
      default:
        break;
    }
  }
};
const randomMaker = function (sucess) {
  //성공시 true 로 반환
  if (parseInt(Math.random() * 100) <= sucess) {
    return true;
  } else {
    return false;
  }
};

const player = new Player();
//adventure(player);
adventureEvent_Battle(player, true);
