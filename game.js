import chalk from 'chalk';
import readlineSync from 'readline-sync';

let day = 1; // 날자
let dayStack = 1; //아침 점심 오후

let stageStack = 1; //스테이지 관련

let battleEnd = true; // 배틀 상태

let playerGold = 0; // 플레이어 관련

let playerInventory = {
  //플레이어 인벤토리
  0: [0, 0],
  1: [0, 0],
  2: [0, 0],
  3: [0, 0],
  4: [0, 0],
  5: [0, 0],
};
let stageName = {
  1: ' 뒷산 ',
  2: ' 뒷산 동굴 ',
  2: ' 동굴안 호수 ',
};
let dayName = {
  1: ' 오전 ',
  2: ' 오후 ',
  3: ' 밤 ',
};

class Dice {
  constructor() {
    this._luck = 0;
    this._str = 0;
    this._dex = 0;
  }
  random() {
    function randomTemp(value) {
      let index = 0; //반복 확인 값
      while (value > 0) {
        let temp = parseInt(Math.random() * value);
        switch (index) {
          case 0: //럭 증가
            this._luck += temp;
            value -= temp;
            break;
          case 1: // 힘 증가
            this._str += temp;
            value -= temp;
            break;
          case 2: // 덱 증가
            this._dex += value;
            value -= value;
            break;
        }
        index++;
      }
    }
    this._luck = 0;
    this._str = 0;
    this._dex = 0;

    let statsPoint = 0; //스텟 기본값

    if (randomMaker(10)) {
      statsPoint += 15;
      randomTemp.call(this, statsPoint);
    } else {
      statsPoint += 10;
      randomTemp.call(this, statsPoint);
    }
  }
}

class Player {
  constructor() {
    this._hp = 100; //max hp입니다.
    this._hpPercent = 1;
    this._level = 1;
    this._exp = 0;
    this._levelUpExp = 100; //레벨업에 필요한 경험치량
    this._atck = 1;
    this._luck = 0;
    this._str = 0;
    this._dex = 0;
    this._playerSkillPoint = 0; //스킬 포인트
    this.dotSprit = {
      atck: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣦⣀⠀⠀⠀⠀⠀⠀⢀⣠⠀⠀⠀⠀⠀  ⠀⠀⣀⡴⠞⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⡉⠳⢦⣀⠀⠀⢠⡞⠿⠖⠲⠶⢆⣠⣴⠛⠉⣰⠄⣹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡀⠻⣄⠀⠉⠻⠷⠋⠀⠀⠀⠀⠀⠈⠉⠈⠛⢶⡋⢠⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠈⠳⣦⢤⡀⠀⠀⠀⠈⠻⣄⠀⠀⠀⠀⠀⢹⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⣠⠶⠖⠛⠛⢹⣿⡗⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⠆⢰⡇⠸⣇⠀⠀⣀⠰⠆⠸⣇⣖⣠⣀⠀⠀⣯⠀⠀⠀⠀⠀⠀⠀⠀⣸⠇⠀⣀⣤⣶⡿⢿⣿⡄
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⡿⠀⠀⠈⢷⣾⣽⣷⣦⣴⠏⣹⢳⣿⣆⠀⢹⠀⠀⢀⡀⠀⠀⠀⢠⡏⢀⡴⠋⢉⣹⣅⠘⣿⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⢀⡏⠀⠀⠀⣿⡃⣾⣿⣷⠀⠀⣿⢸⣿⡟⣷⣼⠁⠀⢸⡋⠳⣆⢀⡟⣠⡟⣴⠛⠛⠿⠿⣿⣿⠃
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⡧⠀⠀⢀⡿⢥⣽⣿⠟⠀⢀⠀⠛⠛⠛⢿⡁⠀⠀⠀⠙⠳⢿⣿⣿⣿⢹⡃⠀⠀⠀⠀⣼⠇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⠀⠀⢸⠇⠀⠀⠀⠀⠰⠛⠃⠀⢀⣠⣞⠁⠀⠀⠀⠀⢰⣿⣿⡿⠋⠀⠹⡶⠶⠖⠛⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢸⡆⠀⣾⢥⣄⣀⣀⣠⣠⡴⠶⠚⠋⠁⢹⡆⠀⠀⠀⠀⣸⣿⣿⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡛⠶⣄⡀⠀⢾⣻⣰⡇⠀⠀⠈⠉⠈⠀⠀⣀⠀⠀⠀⣼⣇⠀⠀⠀⢰⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⡂⠀⠀⠙⠷⣌⣿⣿⣦⣀⣀⡀⠀⠀⠐⣺⣿⣓⣗⠛⠁⠘⢧⡀⢀⣾⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠆⠀⠀⠀⢀⡾⠻⠿⣿⡛⠋⠉⢁⣰⣾⣿⠟⣯⢋⡁⠀⠀⢀⣿⣼⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⠀⠀⠀⢀⡼⠁⠀⠀⠈⠙⠓⠶⠛⢡⣄⣼⡷⠿⣿⣏⣠⣴⠛⣸⣿⡟⠙⢲⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠺⣅⣀⠀⠀⠀⢠⣄⠀⠀⠙⢻⡏⠀⠀⠈⠋⠉⠉⠛⠛⠿⢦⣰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⠀⠀⠈⠉⠳⠶⡶⠻⢽⡚⠖⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⣠⠶⣻⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⡀⠀⠀⠀⠀⠀⠀⢸⠇⠀⠈⠹⢦⡀⠀⠀⠀⠀⠀⠀⠀⢀⣾⢋⡼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⡿⠀⠀⠀⠀⠀⠙⠷⣄⠀⠀⠀⣠⣾⣿⣯⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣄⠀⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠈⠛⠖⠟⢹⣿⡏⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
      hit: `
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⡀⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢰⠟⢾⡆⠀⠀⠀⠀ ⢀⣶⣶⣂⣀⡀⠀⠀⢀⣀⡤⠶⠛⠉⢸⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⡿⢀⡌⠙⢶⣶⠘⢀⡞⠙⠉⠁⠉⠙⠚⠚⠻⢧⣄⣠⠾⠁⣽⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣿⠀⠹⣆⡀⠘⠻⡏⠁⠀⠀⢠⣀⠀⠀⠀⠀⠀⠈⢻⣄⡼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠸⣇⠀⠘⠻⠶⢤⡀⠀⠀⠀⠀⠉⢳⡄⠀⠀⠀⠀⠈⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠙⢷⡆⠀⢠⡟⢧⡀⠀⠀⠀⠀⠀⣿⠓⣶⣤⣀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⢀⡾⠀⠈⢙⣷⣶⣶⣛⠛⠃⣼⡋⠈⢿⡻⣦⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⢸⡃⠀⠀⢘⡇⠈⣨⠏⠀⣀⡀⢙⣷⡎⠳⢯⣵⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣾⠀⠀⠀⢸⠇⣴⣯⡀⠘⠋⠁⠀⠁⠀⣀⣾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⡾⠁⠉⠁⠀⠀⠀⢀⣀⡴⠞⠉⠈⣿⣦⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⡄⠀⢸⣟⠷⠶⠶⠶⠖⠞⠋⠁⠀⠀⠀⠀⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⣾⠛⠃⠉⠀⠀⠀⠀⠀⠀⣤⠶⠖⠛⠳⢦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣼⣿⣶⣦⣤⣤⣤⡄⠀⢠⡞⣁⣸⡆⠀⠀⠀⠙⢿⡴⠤⣤⣤⣤⣀⣄⣀⣀⢀⢀⠀⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣿⣹⠿⢿⣏⣉⣀⢀⡴⠿⠷⣿⣯⣴⡶⠀⠀⠀⣼⠃⠀⠀⠀⠀⠀⠁⠉⠉⠛⣿⠃⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡟⠁⠀⠀⠈⠉⠉⠉⠁⠀⣿⣿⡟⠻⣷⣷⣆⡾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠫⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⡶⠛⠉⠙⠋⢷⣄⡀⠀⠀⠀⠀⠀⠀⣠⠾⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠇⠀⠈⢻⡗⠶⢤⢤⣶⣆⣤⢴⣾⣛⠀⠀⠀⠀⠀⠈⠹⣟⠶⢦⣀⣀⣤⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⡁⠀⠀⠀⢻⡄⠀⠀⠀⠀⠀⠀⠈⠉⠳⣷⡗⠘⠀⠀⠀⠙⣦⣄⡉⡉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⣹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣄⠀⠀⠀⠀⠘⢿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
      defend: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣦⣀⠀⠀⠀⠀ ⠀⠀⠀⣄⠀⠀⠀⠀⠀⠀⠀⣀⡴⠞⢯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⠀⡉⠳⢦⣀⠀⠀⢠⡞⠿⠖⠳⠲⣆⣠⣴⠛⠉⣠⠆⣹⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡀⠻⣄⠀⠉⠻⠷⠋⠀⠀⠀⠀⠀⠈⠈⠉⠛⢶⡋⢠⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠈⠳⣦⢤⡀⠀⠀⠀⠈⠻⣄⠀⠀⠀⠀⠀⢹⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣳⠆⣰⠏⠘⣇⠀⠀⣀⠴⠄⠸⣗⣃⣄⣄⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⣾⠀⠀⠈⣷⣾⣽⣷⣦⣴⠏⣽⢳⣿⣆⠀⢺⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⠠⡗⠀⠀⠀⣾⡇⣾⣿⣷⠀⠀⢿⢸⣿⡟⣷⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⣗⠀⠀⢀⡿⢢⣽⡿⠯⠀⢀⠀⠛⠛⠙⢿⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⠀⠀⢸⡃⠀⠀⠀⠀⠸⠛⠂⠀⢀⣠⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⠀⣾⢤⣄⣄⣀⣠⣠⡴⣶⢾⢯⣅⣹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣻⣰⡇⠀⠀⢈⡼⠋⠉⠹⣏⠀⠀⠀⠉⠉⠳⠶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣦⣀⣴⠋⠁⠀⠀⠀⠸⡄⠀⠀⠀⠀⠀⠀⠀⠙⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⡿⣿⠟⠁⠀⠀⠀⠀⠀⠀⢻⡀⠀⠀⠀⠀⠀⠀⠨⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⣰⠋⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣯⣰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⣀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⠙⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣺⠀⠀⠀⠀⢀⣼⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠷⣄⣀⣰⠏⠙⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠳⣤⣠⡴⠖⠛⠉⠋⠋⠛⠓⠛⠁⠀⠈⠉⠀⠀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
    };
  }
  get hp() {
    let temp = parseInt(this._hp * this._hpPercent);
    return temp;
  }
  set hp(value) {
    // 데미지 받으면 음수로 집어넣기
    let temp = parseInt((this.hp + value) / this._hp);
    if (temp >= 1) {
      temp = 1;
    }
    this._hpPercent = temp;
  }
  level_up() {
    this._level++;
    this._playerSkillPoint += 5;
    this._exp = this._exp - this._levelUpExp;
    this._hp += parseInt((this._str / 5) * 10 + 10);
    this._atck += parseInt((this._str * 5) / 10 + 1); // 기본 1올라감 힘비례 해서 강해짐
  }
}

class Monster {
  //몬스터 데이터
  constructor() {
    this._hp = 100;
    this._atck = 1;
    this._exp = 40;
    this._firstCheck = true;
    this.dotSprit = {
      1: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⠶⠶⠷⢶⣦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⡟⠋⠀⠀⠀⠀⠀⠀⠉⠛⠻⢶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠿⣶⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⣧⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣄⣀⠀⠀⠀⠀⠈⠹⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠠⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⡟⠋⠉⠛⣧⡀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⡏⠀⠀⠀⠀⠘⣷⡀⠀⠀⠀⠀⠀⠘⢿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣾⣁⣀⢀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠀⠀⠀⠀⠀⠀⢹⡇⠀⠀⠀⠀⠀⠀⠘⢿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠿⠿⢿⢿⣿⡧⠀⠀⣄⡀⠀⢀⣿⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠩⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⢨⣿⣯⡀⣼⣿⣿⣆⢐⣿⠀⠀⠀⠀⠀⠀⢸⣯⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣾⠿⣦⣠⣾⣿⣿⣾⣿⣿⣿⣷⢨⡗⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣸⡏⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣟⠸⣇⠀⠀⠀⠀⠀⠀⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣼⠏⠀⠀⠘⣿⠟⢽⣿⣿⣿⣿⡿⠁⠨⣷⠀⠀⠀⠀⠀⣨⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢠⡾⠋⠀⠀⠀⠀⠀⠀⠚⢿⢿⠟⠏⠀⠀⠀⠹⠷⣶⣤⣴⣼⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣗⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣺⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣆⠀⠀⠀⠀⠀⠀
⠀⢀⣿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣦⠀⠀⠀⠀⠀
⠀⢐⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⡀⠀⠀⠀
⠀⠠⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢷⣄⠀⠀
⠀⠐⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀
⢠⣾⣿⣿⣿⣿⣦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡇
`,
      2: `
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⣶⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⡶⣷⣶⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⡿⠛⠁⠀⠀⠈⠉⠻⣷⣄⠀⠀⠀⠀⠀⣠⣾⠟⠁⠀⠀⠀⠉⠛⢿⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣦⠀⠀⢀⣼⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠘⢻⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣾⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣇⢀⣿⠏⠀⠀⠀⠀⠀⣠⣶⠆⠀⠀⠀⠀⢹⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣾⡟⠀⠀⠀⠀⠀⣄⡀⠀⠀⠀⠀⠀⠀⠘⣿⣿⡏⠀⠀⠀⠀⢀⣼⡿⠁⠀⠀⠀⠀⠀⢨⣿⠂⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠰⣿⠁⠀⠀⠀⠀⠀⢻⣷⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⢀⣾⠟⠀⠀⠀⠀⠀⠀⠀⣸⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⢿⣧⠀⠀⠀⠀⠀⠀⡻⡇⡀⡀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⢀⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠸⣿⡀⠀⠀⠀⠀⠀⠀⠀⠛⠃⢀⣤⣴⣾⠿⠟⠟⠟⠟⢿⣶⣤⡀⠀⠀⠀⠀⠀⢀⣠⣾⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⣿⣆⠀⠀⠀⠀⠀⠀⠀⢠⣾⡟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣦⡀⣠⣶⣶⣿⣿⣷⣦⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠘⣿⣄⠀⠀⠀⠀⠀⣰⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣷⡈⠉⠀⠀⠀⠀⠈⠉⠛⠻⢿⣦⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣷⣤⡀⠀⣰⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣄⠀⠀⠀
⠀⠀⠀⠀⠀⣀⣴⡾⠿⠻⠛⠉⠀⢰⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣿⠄⢀⣤⣤⣤⣤⣤⠀⠀⠀⠀⠘⣿⡄⠀⠀
⠀⠀⠀⣠⣾⠟⠉⠀⠀⠀⠀⠀⠀⣸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠈⠉⠉⠉⠉⠁⠀⠀⠀⠀⣼⡿⠀⠀⠀
⠀⢀⣼⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⣺⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⣀⣾⡟⠁⠀⠀⠀
⠀⣾⡟⠀⠀⠀⠀⢀⣠⣤⣶⣶⣶⢸⣿⠀⠀⠀⠀⠀⣠⣶⣄⠀⠀⢠⣴⣾⣶⣄⣰⣿⣟⢋⣥⠀⣦⣤⣀⣀⣀⣤⣶⡿⠋⠀⠀⠀⠀⠀
⢰⣿⠁⠀⠀⠀⠿⠿⠛⠉⠀⠀⠀⠘⣿⣄⣤⣤⢀⣴⣿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣄⠁⠀⠈⠙⠻⠿⣿⣯⣁⠀⠀⠀⠀⠀⠀⠀
⢺⣯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⠿⣿⠄⠀⠀⠀⠀⠀⠈⠙⠻⣷⣄⠀⠀⠀⠀⠀
⠸⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡿⣿⣿⠿⠋⠈⠻⢿⡿⠛⠋⠀⠀⠉⠛⠋⣸⣿⠁⢶⣶⣤⣄⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀
⠀⠙⣿⣤⡀⠀⠀⢀⣀⣤⣶⣦⣄⠀⠀⠿⣷⣌⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠃⠀⠀⠈⠉⠋⠀⠀⠀⠀⣸⡿⠀⠀⠀⠀⠀
⠀⠀⠈⠙⠿⠿⠿⠟⠛⢉⣿⡟⠁⠀⠀⠀⢈⡻⢿⣶⣤⣀⣀⠀⠀⠀⢀⣠⣤⣶⡿⠋⠁⢀⣄⠀⠀⠀⠀⠀⢀⣠⣾⠟⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡿⠀⠀⠀⠀⣰⣿⠃⠀⠈⠉⠛⠻⠿⠿⠿⠟⠛⠉⠀⠀⠀⠾⣿⡿⢷⣶⣤⣴⣶⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠠⣿⡃⠀⠀⠀⢠⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣷⠀⠀⠀⠀⠀⠹⣿⡀⠀⠉⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠨⣿⡂⠀⠀⠀⠻⠇⠀⠀⠀⠀⢺⣷⠀⠀⠀⠀⠀⠿⠇⠀⠀⠀⠀⠨⣿⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡿⠀⠀⠀⠀⢀⣠⣶⠿⢿⣶⣄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣄⠀⠀⠀⠀⠀⠀⣀⣼⡿⠙⣿⣿⣦⡀⠀⠀⠀⠀⣀⣤⣾⠟⠁⠀⠀⠀⣠⣾⠟⠁⠀⠀⠈⠻⣷⡄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⣷⣶⣴⣴⣶⠿⠟⠋⠀⠀⢽⡯⠙⢿⣶⣴⣶⣿⠟⢻⣷⣤⣀⠀⢀⣾⡟⠁⠀⠀⠀⠀⠀⠀⠙⣿⡄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠁⠀⠀⠀⠀⠀⠀⣺⡯⠀⠀⠀⠀⣺⣿⣤⣀⠈⠙⠛⠿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⠃⠀⠀⢀⣴⡿⠃⠙⠻⢷⣦⣄⠀⠀⠀⢠⣦⣴⣾⣄⠀⣀⡀⣀⡀⣿⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡟⠁⠀⢀⣰⣾⠏⠁⠀⠀⠀⠀⠉⣿⡇⠀⠀⣾⣿⣿⣿⣿⣶⣿⣿⡟⢿⢿⠇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⠋⠀⠀⣤⣿⠏⠁⠀⠀⠀⠀⠀⠀⠀⢿⡇⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣆⡀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡟⠁⠀⣠⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⡄⠀⠀⠀⠙⠿⠿⠟⠛⠛⠉⣿⡇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠏⠀⠀⢰⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣷⣶⣤⣤⣀⣀⣄⣤⣤⣾⠿⠁⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠛⠙⠉⠉⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣷⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`,
    };
  }
  get hp() {
    if (this._firstCheck) {
      this._firstCheck = false;
      this._hp += (this._hp / 10) * day;
    } else return this._hp;
  }
  set hp(value) {
    this._hp = value;
  }
  drop_item() {
    // 몬스터의 아이템 드랍
  }
  attack() {
    // 몬스터의 공격
  }
  die() {
    if (this._hp <= 0) {
    }
  }
}

export async function startGame() {
  console.clear();
  const player = new Player();
  const dice = new Dice();
  await playerStatusDice(dice, player);
  while (day <= 100) {
    while (true) {
      // 입력값 받아오기
      console.clear();
      displayDefolt(player);
      console.log(
        chalk.green(`\n1. 인벤토리 2. 숲속으로 떠니기 3. 상태확인 4. 휴식`),
      );
      const choice = readlineSync.question(`choose_number : `);
      switch (parseInt(choice)) {
        case 1:
          break;
        case 2:
          await adventure(player);
          break;
        case 3:
          await status(player);
          break;
        case 4:
          await camp(player);
          break;
        default:
          break;
      }
    }
  }
}
const adventure = async (player) => {
  const checkDayCount = () => {
    if (dayStack >= 3) {
      day++; // 날짜
      dayStack = 1;
    } else {
      dayStack++; // 날 오전 오후 저녁 정하기 위한 스텍
    }
  };
  while (true) {
    console.clear();
    displayAdventure(player);
    console.log(
      chalk.green(
        `\n1.오른쪽으로 이동 2.왼쪽으로 이동 3.앞쪽으로 이동 4. 베이스켐프로 돌아가기 `,
      ),
    );
    const choice = readlineSync.question(`choose_number : `);
    switch (parseInt(choice)) {
      case 1:
        checkDayCount();
        break;
      case 2:
        checkDayCount();
        break;
      case 3:
        checkDayCount();
        break;
      case 4:
        return;
      default:
        console.log(chalk.green(`다시 입력해주세요.`));
        break;
    }
  }
};
const battle = async (day, player) => {
  const monster = new Monster();
  while (player._hp > 0) {
    console.clear();
    displayStatus(day, player, monster);

    logs.forEach((log) => console.log(log));

    console.log(chalk.green(`\n1. 공격한다 2. 아무것도 하지않는다.`));
    const choice = readlineSync.question('choose_number : ');

    // 플레이어의 선택에 따라 다음 행동 처리
    logs.push(chalk.green(`${choice}를 선택하셨습니다.`));
  }
};
const inventory = async (day, player, monster) => {
  let logs = [];

  while (player._hp > 0) {
    console.clear();
    displayStatus(day, player, monster);

    logs.forEach((log) => console.log(log));

    console.log(chalk.green(`\n1. 공격한다 2. 아무것도 하지않는다.`));
    const choice = readlineSync.question('choose_number : ');

    // 플레이어의 선택에 따라 다음 행동 처리
    logs.push(chalk.green(`${choice}를 선택하셨습니다.`));
  }
};
const status = async (player) => {
  let logs = [];
  console.clear();
  displayStatus(player);
  while (true) {
    console.log(
      chalk.green(
        `\n1. LUCK 증가 2. STR 증가 3. DEX 증가 4. 선택 창으로 이동 `,
      ),
    );
    const choice = readlineSync.question('choose_number : ');
    switch (parseInt(choice)) {
      case 1:
        if (player._playerSkillPoint > 0) {
          player._playerSkillPoint--;
          player._luck++;
          console.clear();
          displayStatus(player);
        } else {
          console.log(chalk.green('스킬 포인트가 모자랍니다'));
        }
        break;
      case 2:
        if (player._playerSkillPoint > 0) {
          player._playerSkillPoint--;
          player._str++;
          console.clear();
          displayStatus(player);
        } else {
          console.log(chalk.green('스킬 포인트가 모자랍니다.'));
        }
        break;
      case 3:
        if (player._playerSkillPoint > 0) {
          player._playerSkillPoint--;
          player._dex++;
          console.clear();
          displayStatus(player);
        } else {
          console.log(chalk.green('스킬 포인트가 모자랍니다.'));
        }
        break;
      case 4:
        return;
      default:
        console.log(chalk.green('잘못된 입력입니다.'));
        break;
    }
  }
};
const camp = async (player) => {
  while (player.hp > 0) {
    console.clear();
    displayCamp(player);
    console.log(chalk.green(`\n1. 휴식을 취하기 2. 베이스캠프로 돌아가기.`));
    const choice = readlineSync.question('choose_number : ');
    switch (parseInt(choice)) {
      case 1:
        day++;
        dayStack = 1;
        player.hp = player._hp * (3 - stageStack + 1) * 0.2;
        return;
      case 2:
        return;
      default:
        console.log(chalk.green(`다시 입력해주세요.`));
        break;
    }
  }
};
const playerStatusDice = async (dice, player) => {
  dice.random();
  while (true) {
    console.clear();
    // 입력값 받아오기
    displayFristDice(dice);
    console.log(chalk.green(`\n1.선택 2.다시 `));
    const choice = readlineSync.question(`choose_number : `);
    switch (parseInt(choice)) {
      case 1:
        player._luck = dice._luck;
        player._str = dice._str;
        player._dex = dice._dex;
        return;
      case 2:
        dice.random();
        break;
      default:
        console.log(chalk.green(`다시 입력해주세요.`));
        break;
    }
  }
};
function displayFristDice(dice) {
  console.clear();
  console.log(
    chalk.magentaBright(
      `\n========================= 주사위 를 던져주세요 ========================`,
    ),
  );
  console.log(
    chalk.cyanBright(`
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣴⣶⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣶⠿⠟⠛⠉⠁⠈⠙⠿⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⡾⠟⠉⠀⠀⠀⣠⣤⣄⡀⠀⠀⠀⠉⠻⢷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣶⠿⠛⠁⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠉⠛⠿⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⡾⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⢿⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⣶⣄⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣀⣤⣶⠟⠋⠁⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠙⠻⣶⣄⡀⠀⠀⠀
⠀⠀⣀⣤⣶⠿⠛⠉⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣷⠄⠀⠀⠀⠀⠀⣠⣴⣶⣤⡀⠀⠀⠀⠀⠀⣾⣿⣿⣿⡆⠀⠀⠀⠀⠈⠙⠻⣶⣤⡀
⢰⡾⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⡿⠁⠀⠀⠀⠀⠐⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⢿⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⣻⡇
⠘⣿⡀⠿⠷⣦⣤⣀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠀⠀⠀⠀⠀⠀⠀⠉⠛⠛⠃⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⢀⣠⣴⡾⠟⠂⢽⡇
⠀⢻⣇⠀⠀⠀⠉⠛⠿⣶⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⠟⠋⠁⠀⠀⠀⣺⡇
⠀⠘⣿⡀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠿⢶⣦⣤⣀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⣀⣴⡾⠛⠉⠀⠀⠀⠀⠀⠀⠀⣺⡇
⠀⠀⢻⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠻⢷⣦⣄⡀⠀⠀⠸⣿⣿⡿⠏⠀⠀⢀⣤⣶⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇
⠀⠀⠘⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⠷⣶⣄⡀⠀⠀⣀⣤⡾⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⣿⠆
⠀⠀⠀⢻⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢃⣄⠾⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⣿⠁
⠀⠀⠀⠸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⢰⣾⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⢨⣿⠀
⠀⠀⠀⠀⢿⡇⠀⠀⠀⠀⠀⠀⠀⢠⣴⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠙⢿⣿⠿⠃⠀⠀⣴⣶⣦⡀⠀⠀⠀⠀⠀⢸⣏⠀
⠀⠀⠀⠀⢸⣷⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇⠀⠀⡀⡀⠀⢸⡗⠀
⠀⠀⠀⠀⠀⢿⡆⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⠋⠀⠀⣼⣿⣿⡆⢸⡯⠀
⠀⠀⠀⠀⠀⠘⣿⡀⠀⠀⠀⠀⠀⠀⠉⠋⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠿⠟⠁⣸⡿⠀
⠀⠀⠀⠀⠀⠀⢻⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠋⠁⠀
⠀⠀⠀⠀⠀⠀⠈⢿⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⠟⠉⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⢷⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⠿⠋⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⢷⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣿⠀⠀⠀⠀⠀⠀⠀⢀⣤⡾⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⢷⣤⣀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⢀⣴⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣶⣄⡀⠀⠀⢸⣿⠀⠀⢀⣠⣾⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣶⣄⣸⣿⣠⣴⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`),
  );
  console.log(
    chalk.magentaBright(`| LUCK : ${dice._luck} `) +
      chalk.magentaBright(`| STR : ${dice._str} `) +
      chalk.magentaBright(`| DEX : ${dice._dex} `),
  );
  console.log(
    chalk.magentaBright(
      `====================================================================\n`,
    ),
  );
}
function displayDefolt(player) {
  console.log(
    chalk.magentaBright(
      `\n===================== 여정을 선택해 주세요! ====================`,
    ),
  );
  console.log(
    chalk.cyanBright(`
      ⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠
      ⢻⡀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⢀⡟
      ⠘⢧⠀⠀⠀⠀⣰⠏⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⠹⣆⠀⠀⠀⢀⡼⠁
      ⠀⠈⢷⡄⢀⡼⠃⠀⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠇⠀⠘⢧⠀⣠⠞⠁⠀
      ⠀⠀⠀⠙⢿⡅⠀⠀⠀⢻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡟⠀⠀⠀⢸⡿⠉⠀⠀⠀
      ⠀⠀⠀⠀⠈⡧⠀⠀⠀⠀⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠀⠀⠀⠀⢼⠁⠀⠀⠀⠀
      ⠀⠀⠀⠀⣸⠇⠀⠀⠀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠁⠀⠀⠀⠀⠸⣇⠀⠀⠀⠀
      ⠀⣤⠦⠟⠁⠀⠀⠀⠀⠀⠀⠀⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠏⠀⠀⠀⠀⠀⠀⠀⠈⠳⢦⣤⠀
      ⠀⠈⠻⣄⠀⠀⠀⠀⠀⠉⠳⠲⢾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⡷⠖⠟⠁⠀⠀⠀⠀⠀⣠⠟⠀⠀
      ⠀⠀⠀⠙⣦⠀⠀⠀⠀⠀⠀⠀⠘⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡼⠁⠀⠀⠀⠀⠀⠀⠀⣼⠋⠀⠀⠀
      ⠀⠀⠀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠈⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠁⠀⠀⠀⠀⠀⠀⢀⡾⠁⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠻⣆⡀⠀⠀⠀⠀⠀⣀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡀⠀⠀⠀⠀⠀⢀⣴⠛⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⢀⣻⠄⠀⢰⡾⠚⠉⠀⠀⠀⠀⠀⠀⣀⣀⢀⡀⠀⠀⠀⠀⢀⣀⣄⠀⠀⠀⠙⠓⢶⡆⠀⢐⣯⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠐⢷⣋⠉⠙⢳⡟⠃⠀⠀⠀⠀⠀⣀⣰⠞⠉⠈⠁⠉⠛⣦⣤⠞⢋⣁⠈⢷⡀⠀⠀⠀⠈⠙⣾⠋⠉⣙⡷⠂⠀⠀⠀⠀⠀
      ⠲⢶⠴⣤⣤⣠⣀⣍⣛⣶⢼⡇⠀⠀⠀⢀⡴⠞⢩⡏⠀⠀⠀⠀⠀⠀⠘⣏⠛⠿⣭⣧⠸⣇⠀⠀⠀⠀⢀⡷⣾⣫⣉⣠⣠⣤⡤⡴⡶⠒
      ⠀⠠⣇⠀⠀⠀⢽⠈⠀⠀⠸⡅⠀⠀⠀⠹⢦⣀⣼⡇⠀⠀⠀⠀⠀⠀⠠⣗⣄⡴⢞⣹⠄⣹⠄⠀⠀⠀⢐⡇⠀⠀⢁⡯⠀⠀⠀⢴⠀⠀
      ⠀⠀⣿⠖⠶⣄⢸⡅⠀⠀⠨⡇⠀⠀⠀⠀⠀⠁⠈⣧⠀⣀⠀⠀⠀⠀⢨⣷⡟⣋⣋⣁⡴⠏⠀⠀⠀⠀⢸⡇⠀⠀⢰⡇⢰⠖⠶⣿⠀⠀
      ⠀⠀⢽⠀⠀⢿⣸⡃⠀⠀⢈⡿⠒⠂⠀⠀⠀⠀⠀⣸⠟⠙⠓⠶⠾⡖⢻⣿⣿⠉⠀⠁⠁⠀⠀⠀⠐⠚⢾⡃⠀⠀⢸⡇⡿⠀⢀⡗⠀⠀
      ⠀⠀⢺⠅⠀⠈⠙⢙⡦⠀⠘⠃⠀⠀⠀⠀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀⠹⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣧⣄⢴⡋⠋⠁⠀⢐⡇⠀⠀
      ⠀⠀⢸⡇⠀⠀⠀⣸⠃⠀⠀⠀⠀⠀⠀⠀⠀⢰⣾⣷⡶⠶⠆⠛⠙⠛⠛⢻⡁⠀⠀⠀⠀⠀⢀⡴⠛⠚⠞⠥⣾⣝⣦⠀⠀⠀⢸⠇⠀⠀
      ⠀⠀⠈⡧⠀⠀⠀⠋⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⡿⣿⠅⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠀⣾⠁⠀⠀⠀⠀⠀⠈⢹⡆⠀⠀⣼⠁⠀⠀
      ⠀⠀⠀⣻⠀⣼⠛⠆⠀⠀⠀⠀⠀⠀⢠⣾⡿⠃⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⢹⡄⠀⠀⠀⠀⠈⢧⣀⣠⣀⣀⣀⡀⣸⠟⣧⠀⡯⠀⠀⠀
      ⠀⠀⠀⠸⠅⠗⠀⠀⠀⠀⠀⠀⠀⠐⠿⠋⠀⠀⣼⠃⠀⠀⢀⣠⠴⣤⡀⠀⠀⠹⢦⡀⠀⠀⠀⠀⠉⠈⣽⣹⠉⠉⠉⠀⠺⠨⠇⠀⠀⠀
      ⠀⠀⠀⢰⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣇⣀⣠⣰⠞⠁⠀⠀⠀⢹⣶⣾⣿⠁⠀⠀⠀⠀⠀⠀⠈⠋⠀⠀⠀⠀⠀⢸⡆⠀⠀⠀
      ⠀⠀⣠⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣯⠀⠀⠀⠀⢠⣾⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⣄⠀⠀
`),
  );
  console.log(
    chalk.magentaBright(`| 날짜 : ${day} `) +
      chalk.magentaBright(`| 시간 : ${dayStack} : ${dayName[dayStack]}`) +
      chalk.magentaBright(`| 플레이어 소지금 : ${playerGold} : G `),
    chalk.magentaBright(`| 남은 체력 : ${player.hp} : HP `),
  );
  console.log(
    chalk.magentaBright(
      `=============================================================\n`,
    ),
  );
}
function displayBattle(day, player) {
  console.log(chalk.magentaBright(`\n=== Current Status ===`));
  console.log(
    chalk.cyanBright(`| Stage: ${day} `) +
      chalk.blueBright(`| 플레이어 정보 :`) +
      chalk.redBright(`| 몬스터 정보 |`),
  );
  console.log(chalk.magentaBright(`=====================\n`));
}
function displayAdventure(player) {
  console.log(
    chalk.magentaBright(
      `\n===================== ${stageName[stageStack]} ====================`,
    ),
  );
  console.log(
    dayStack != 3
      ? chalk.cyanBright(`
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⡴⠖⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠳⠶⢤⣤⣠⣠⣤⠤⠶⠖⠞⠋⣡⠟⢳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⢀⡾⠁⠀⠀⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀⣴⠶⣆⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠃⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡀⠀⠀⠀⠀
      ⠀⣠⠟⠀⠀⠀⠀⠀⠹⣆⠀⠀⠀⠀⠀⢀⡾⠁⠀⠘⢧⠀⠀⠀⠀⠀⢀⡴⠏⠀⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⢀⡼⠃⠹⢦⡀⠀⠀
      ⡴⠋⠀⠀⠀⠀⠀⠀⠀⠹⡆⢠⣦⣀⠀⠛⠀⠀⠀⠀⢈⣣⠀⠀⠀⢠⠞⠁⠀⣠⡴⠛⢷⠀⠀⠘⣇⠀⠀⠀⠀⢀⡾⠁⠀⠀⠈⠳⣄⠀
      ⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⡉⠳⢦⣀⠀⠀⢠⡞⠿⠖⠲⠶⣆⣠⣴⠛⠁⣰⠆⢹⠀⠀⠀⢸⡆⠀⠀⣠⠟⠀⠀⠀⠀⠀⠀⠙⢦
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡀⠻⣄⠀⠉⠻⠷⠋⠀⠀⠀⠀⠀⠈⠁⠉⠛⢶⡋⢀⡟⠀⠀⠀⠀⢷⣀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠈
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠈⠳⣦⢤⡀⠀⠀⠀⠈⠻⣄⠀⠀⠀⠀⠀⢹⡟⠁⠀⠀⠀⠀⠀⢻⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣳⠆⢰⡇⠸⣇⠀⠀⣀⠰⠆⠸⣇⣖⣠⣀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⡀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⣾⠀⡿⠀⠀⠈⢷⣾⣽⣷⣦⣴⠏⣹⢳⣿⣆⠀⢹⠀⠀⠀⠀⢺⠶⣄⣀⣹⠄⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⢸⣧⠴⠳⣆⠀⢰⡇⠀⠀⠀⠀⢻⢀⡏⠀⠀⠀⣿⡃⣾⣿⣷⠀⠀⣿⢸⣿⡟⣷⣼⠁⠀⠀⠀⠀⠀⠈⢉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠈⠁⠀⠀⠈⠻⠺⠂⠀⠀⠀⠀⠸⣇⡇⠀⠀⢀⡿⢥⣽⣿⠟⠀⢀⠀⠛⠛⠛⢿⡁⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⠀⠀⢸⠇⠀⠀⠀⠀⠰⠛⠃⠀⢀⣠⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢸⡆⠀⣾⢥⣄⣀⣀⣠⣠⡴⠶⠚⠋⠁⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⡛⠶⣄⡀⠀⢾⣻⣰⠇⠀⠀⠈⠉⠈⠀⠀⠀⠀⠀⠀⣼⢧⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡂⠀⠀⠙⠷⣌⣿⣿⣧⣀⣀⡀⡀⠀⠀⣠⡖⠚⣞⠛⠁⠀⠙⢿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠹⡆⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠅⠀⠀⠀⠀⠈⢻⡿⣿⡛⠋⠉⢁⣠⠞⠻⢾⣿⣥⣤⡄⠀⠀⢨⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡄⠀⠀⠀⠀
      ⠀⢲⡄⠀⠀⠀⠀⣠⠄⣼⠁⠀⠀⠀⠀⣰⠟⠀⠈⠙⠓⠶⠛⠁⠀⢰⣾⡿⠿⣿⣴⡤⣠⡾⢧⡀⠀⠀⠀⠀⠀⠰⠶⢤⣤⠷⠀⠀⠀⠀
      ⠀⠀⠹⢦⣀⣀⡴⠏⠀⣿⠀⠀⠀⠀⠀⢯⡀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣽⣧⡴⠞⠛⠿⢯⡀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠉⠉⠀⠀⠀⣿⠀⠀⠀⠀⠀⠈⡽⠶⢦⣄⣀⣠⣆⣀⣠⡬⠿⠇⠀⠀⠀⠀⠀⠹⣆⠀⠈⠳⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⡀⠀⠀⠀⢀⡼⠃⠀⠀⢼⠉⠁⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠈⠙⢶⣄⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⢀⡾⠁⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⢀⡼⠃⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣤⡟⠀⠀⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣤⠶⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀
`)
      : chalk.cyanBright(`
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠀⠀⠸⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠀⠀⠀⠀⠉⠳⠶⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⠦⣄⣀⣀⣀⣄⡴⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⡴⠖⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠈⠀⠀⠀⠀⠀⣰⠏⢳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⢀⡾⠁⠀⠀⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀⣴⠶⣆⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠃⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡀⠀⠀⠀⠀
      ⠀⣠⠟⠀⠀⠀⠀⠀⠹⣆⠀⠀⠀⠀⠀⢀⡾⠁⠀⠘⢧⠀⠀⠀⠀⠀⢀⡴⠏⠀⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⢀⡼⠃⠹⢦⡀⠀⠀
      ⡴⠋⠀⠀⠀⠀⠀⠀⠀⠹⡆⢠⣦⣀⠀⠛⠀⠀⠀⠀⢈⣣⠀⠀⠀⢠⠞⠁⠀⣀⡴⠛⣷⠀⠀⠘⣇⠀⠀⠀⠀⢀⡞⠁⠀⠀⠈⠳⣄⠀
      ⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠀⡉⠳⢦⣀⠀⠀⢠⡞⠿⠖⠲⠶⣆⣠⣴⠛⠉⣰⠄⣸⠀⠀⠀⢸⡆⠀⠀⣠⠟⠀⠀⠀⠀⠀⠀⠙⢦
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡀⠻⣄⠀⠉⠻⠷⠋⠀⠀⠀⠀⠀⠈⠈⠉⠛⢶⡋⢠⡞⠀⠀⠀⠀⢷⣀⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠈
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠈⠳⣦⢤⡀⠀⠀⠀⠈⠻⣄⠀⠀⠀⠀⠀⢹⡞⠁⠀⠀⠀⠀⠀⢻⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣳⠆⢰⡇⠸⣇⠀⠀⠀⠀⠀⠸⣇⣖⣠⣀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⡀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⣾⠀⡿⠀⠀⠈⢷⣤⣀⣴⣶⣴⠏⣹⢳⣿⣆⠀⢹⠀⠀⠀⠀⢺⠶⣄⣀⣹⠄⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⢸⣧⠴⠳⣆⠀⢰⡇⠀⠀⠀⠀⢻⢀⡏⠀⠀⠀⣿⣷⣯⣷⡯⡆⠀⣿⢸⣿⡟⣷⣼⠁⠀⠀⠀⠀⠀⠈⢉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠈⠁⠀⠀⠈⠻⠺⠂⠀⠀⠀⠀⠸⣇⡇⠀⠀⢀⡟⠀⠀⠀⠀⠀⢀⠀⠛⠛⠛⢿⡁⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⠀⠀⢸⠇⠀⠀⠀⠀⠰⠛⠃⠀⢀⣠⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢸⡆⠀⣾⢥⣄⣀⣀⣠⣠⡴⠶⠚⠋⠁⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⡛⠶⣄⡀⠀⢾⣻⣰⠇⠀⠀⠈⠉⠈⠀⠀⠀⠀⠀⠀⣼⢧⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡂⠀⠀⠙⠷⣌⣿⣿⣧⣀⣀⡀⡀⠀⠀⣠⡖⠚⣞⠛⠁⠀⠙⢿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠹⡆⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠅⠀⠀⠀⠀⠈⢻⡿⣿⡛⠋⠉⢁⣠⠞⠻⢾⣿⣥⣤⡄⠀⠀⢨⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡄⠀⠀⠀⠀
      ⠀⢲⡄⠀⠀⠀⠀⣠⠄⣼⠁⠀⠀⠀⠀⣰⠟⠀⠈⠙⠓⠶⠛⠁⠀⢰⣾⡿⠿⣿⣴⡤⣠⡾⢧⡀⠀⠀⠀⠀⠀⠰⠶⢤⣤⠷⠀⠀⠀⠀
      ⠀⠀⠹⢦⣀⣀⡴⠏⠀⣿⠀⠀⠀⠀⠀⢯⡀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣽⣧⡴⠞⠛⠿⢯⡀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠉⠉⠀⠀⠀⣿⠀⠀⠀⠀⠀⠈⡽⠶⢦⣄⣀⣠⣆⣀⣠⡬⠿⠇⠀⠀⠀⠀⠀⠹⣆⠀⠈⠳⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⡀⠀⠀⠀⢀⡼⠃⠀⠀⢼⠉⠁⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡀⠀⠈⠙⢶⣄⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⢀⡾⠁⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡀⠀⠀⢀⡼⠃⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣤⡟⠀⠀⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣤⠶⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀
`),
  );
  console.log(
    chalk.cyanBright(
      `| 날짜 : ${day} ${dayName[dayStack]}   : Stage : ${stageName[stageStack]} `,
    ) +
      chalk.blueBright(
        `| 플레이어 정보 : ${player._level} | 남은 경험치 | ${
          player._levelUpExp - player._exp
        } | 남은 체력 :  ${player.hp} | `,
      ),
  );
  console.log(
    chalk.magentaBright(
      `=============================================================\n`,
    ),
  );
}
function displayinventory(day, player) {
  console.log(
    chalk.magentaBright(
      `\n===================== 여정을 선택해 주세요! ====================`,
    ),
  );
  console.log(
    chalk.cyanBright(`| Stage: ${day} `) +
      chalk.blueBright(`| 플레이어 정보 :`) +
      chalk.redBright(`| 몬스터 정보 |`),
  );
  console.log(
    chalk.magentaBright(
      `=============================================================\n`,
    ),
  );
}
function displayStatus(player) {
  console.log(
    chalk.magentaBright(
      `\n===================== 플레이어 정보창 ====================`,
    ),
  );
  console.log(
    chalk.cyanBright(`
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡤⠶⠲⠒⢓⡓⠛⡓⠓⡓⠲⠶⢦⡀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠇⠀⠀⢾⡷⢾⡷⠘⠗⠐⠟⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠸⡇⠀⠀⠈⠁⣠⣀⢀⡄⣠⡄⣀⠀⣸⠃⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣀⠀⠀⠀⠀⢀⣀⠀⠀⠀⢀⡞⠹⡇⠀⠈⣧⠀⠀⣶⡆⠺⣿⣿⣿⣿⢃⣿⠁⣾⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⣏⠳⢦⡀⣠⠞⣻⡤⢶⣄⡟⢰⡆⢻⡀⠀⢻⠀⠀⢿⣷⣷⣿⣿⣿⣿⣿⠿⢸⡃⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⢻⡀⠈⠳⠋⠀⢀⡀⠈⠉⠛⢾⡅⢸⡇⠀⢸⡇⠀⠀⠈⠉⢿⣿⣿⡇⠀⠀⣾⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡈⠹⢶⣄⠀⣀⡸⢿⡒⣆⣄⡀⢹⡾⠀⠀⠀⠛⠛⡓⠶⠺⠛⠛⠛⠋⠋⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⠆⡾⢙⡿⢩⣿⡾⢷⣿⣬⣻⢬⡇⠀⠀⠀⠀⣿⣿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⡰⡏⠸⡇⢺⣿⡿⠘⣿⣿⣹⣿⡧⠀⠀⠀⣀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣇⡧⠀⣹⠏⠉⠰⠻⠂⢉⣨⣽⡇⠀⠀⢸⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⡄⣸⠗⠶⠤⠴⠞⠋⠁⣹⠇⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣳⣾⡀⠀⣀⣠⣤⣤⡴⠟⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⡟⣿⣾⣿⡟⢉⣈⢉⡾⠳⣝⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⠞⠉⠀⠀⢹⣿⣿⣼⠇⠀⠈⠉⠻⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡶⠋⠀⠀⠀⠀⠀⢨⣿⣷⣾⠇⠀⠀⠀⠀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⠀⠀⠀⢼⠛⠿⢻⡇⠀⠀⢀⣤⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣷⣶⠶⠤⠴⠤⠟⠀⠀⠀⠹⣤⢶⡋⠀⠙⢷⣀⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣷⡞⠁⠀⠀⠀⠛⠛⠚⠶⠶⠖⠟⠂⠀⠁⠀⠀⢸⠏⣸⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⡶⠶⣟⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠃⠉⠉⣹⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⠄⠁⠀⠙⠷⣤⡀⢠⣠⣤⡤⢤⠤⠶⠖⠶⠲⠖⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀      
`),
  );
  console.log(
    chalk.cyanBright(` | 현재 플레이어 레벨: ${player._level} `) +
      chalk.blueBright(`| 남은 스텟 포인트 : ${player._playerSkillPoint} `) +
      chalk.redBright(`| 스텟 정보 |`),
  );
  console.log(
    chalk.cyanBright(` | 0-0 `) +
      chalk.blueBright(`| Luck : ${player._luck}`) +
      chalk.redBright(
        ` | 기본적인 이벤트 나올 확률 더 좋은 상자가 나올 확률을 늘려줍니다. |`,
      ),
  );
  console.log(
    chalk.cyanBright(`| 0^0 `) +
      chalk.blueBright(`| STR : ${player._str}`) +
      chalk.redBright(
        `| 특정 이벤트에 필요하고 체력과 공격력 성장 계수에 영향을 끼칩니다. |`,
      ),
  );
  console.log(
    chalk.cyanBright(`| 0.0 `) +
      chalk.blueBright(`| DEX : ${player._dex}`) +
      chalk.redBright(
        `| 안 좋은 이벤트시 받는 데미지를 줄여주거나 괴물 회피 확률 또는 도주 확률을 늘려줍니다. |`,
      ),
  );
  console.log(
    chalk.magentaBright(
      `=============================================================\n`,
    ),
  );
}
function displayCamp(player) {
  console.log(
    chalk.magentaBright(
      `\n===================== 피곤하다 ====================`,
    ),
  );
  console.log(
    chalk.cyanBright(`
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣠⣠⣠⣠⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡴⠖⠛⠉⠁⠉⠈⠀⠀⠀⠀⠈⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⠀⠀⢀⣀⡶⢶⡟⢻⡄⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⠀⡶⠛⠛⠋⣿⠹⡇⢸⠂⠀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣇⠀⠙⠓⠛⠛⢛⣉⡉⢁⣀⣰⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠶⠶⠂⠛⢋⣉⡉⠁⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⡀⠀⠀⠀⢀⣾⣧⣄⣄⢀⣀⣀⣄⣤⢤⡄⠀⣿⣿⡷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡏⣨⡉⠛⠳⠶⡟⠀⢀⡀⠈⠛⠛⢧⡴⢂⡼⠁⢀⣀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⣄⠙⠶⢶⣦⠀⠀⠀⠹⣆⡀⠀⠀⢻⡞⠁⠀⢺⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢷⠂⣾⠉⢷⠴⠤⣤⡟⣿⣶⣆⡸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⡀⡗⠀⣸⠷⠲⠆⠀⣿⣯⣸⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣧⡇⠀⢼⠁⠀⠰⠛⠆⢀⣠⡽⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣷⢠⡟⠲⠶⠶⠲⠛⠉⠁⣻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣏⣀⣀⣴⢦⣠⣴⢶⣶⣏⣀⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣽⣿⣿⡿⣿⠀⠉⠓⠶⣄⣽⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡄⣰⠏⠀⠀⢶⣦⡈⠻⣿⣿⡍⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⠀⠀⣿⢹⣿⣿⡿⠁⠀⢰⢶⡼⠀⠙⣦⠈⠹⣾⠃⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣹⠇⠀⣿⠸⣿⣿⠁⠀⣰⠏⠀⠀⠀⠀⢘⡇⠀⠸⣧⣀⣄⣠⣴⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣹⣧⡤⣽⡿⣾⡇⠀⠸⡇⠀⠀⠀⠀⠀⢸⠇⠀⢨⡿⡇⠀⠈⢹⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡃⠀⠀⢸⡇⠈⣧⠀⢠⡿⡶⢶⣶⡶⢛⣻⣷⠆⣼⠁⢿⠀⠀⢹⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⠀⠀⣾⠁⠀⠹⣆⣸⡿⠋⡉⠋⠛⡛⣻⢿⣾⡃⠀⢸⣁⠀⣺⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⢀⡾⣿⣂⢀⣀⣸⣿⣿⣿⣿⣿⣿⢿⠿⡿⠟⠹⠒⠛⠙⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠉⠉⠉⠁⠁⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`),
  );
  console.log(
    chalk.cyanBright(` | 캠핑 시 오전으로 초기화 체력 남은 스택 비례 회복 `) +
      chalk.blueBright(`| 다음날까지 남은 스택 : ${3 - dayStack + 1} `) +
      chalk.redBright(
        `| 예상 회복량 :  ${player._hp * (3 - dayStack + 1) * 0.2} |`,
      ),
  );
  console.log(
    chalk.magentaBright(
      `=============================================================\n`,
    ),
  );
}

const randomMaker = function (sucess) {
  //성공시 true 로 반환
  if (parseInt(Math.random() * 100) <= sucess - 1) {
    return true;
  } else {
    return false;
  }
};
